<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matthew Reinbold</title>
    <description>This is the website for Matthew Reinbold (that's me!). I am the Director for API Platform Ecosystems and Digital Transformation for Postman. I also write the 'Net API Notes' email  newsletter and curate NetAPI.events. 
</description>
    <link>https://matthewreinbold.com/</link>
    <atom:link href="https://matthewreinbold.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 09 Nov 2021 11:23:58 -0600</pubDate>
    <lastBuildDate>Tue, 09 Nov 2021 11:23:58 -0600</lastBuildDate>
    <generator>Jekyll v4.2.1</generator>
    
      <item>
        <title>Pandemic-Led Digital Transformation; You're Doing it Wrong</title>
        <description>&lt;p&gt;The pandemic impacted businesses in many ways, some obvious (hello, work-from-home) and some so subtle that they may not even be apparent for several more years. One aspect pointed to in business and technology press is how the pandemic “sped up” digital transformation.&lt;/p&gt;

&lt;p&gt;How true that statement is depends to large degree with how you define digital transformation. I was recently asked for my thoughts on the matter and I thought I’d also share them here.&lt;/p&gt;

&lt;h2 id=&quot;was-the-pandemic-a-catalyst-for-digital-transformation-or-do-you-think-most-companies-missed-the-chance-to-drive-their-digital-transformation-initiatives-forward&quot;&gt;Was the pandemic a catalyst for digital transformation? Or do you think most companies missed the chance to drive their digital transformation initiatives forward?&lt;/h2&gt;

&lt;p&gt;Change is hard, even under the best of conditions. We often see a change in moments of crisis (takeovers, bankruptcy, or public scandal) when the call-to-action is finally loud enough to overcome people’s comfort with the status quo.&lt;/p&gt;

&lt;p&gt;The pandemic (and ensuing intertwined crises including supply chain disruption, political upheaval, and social unrest) provided plenty of impetus to change. However, companies need to assess whether what changed is simply doing the same thing as before, but over video and instant messaging? Or did they embrace the situation to introduce new norms, processes, and products to their business?&lt;/p&gt;

&lt;p&gt;Doing the same thing as before, but more efficiently, is called &lt;em&gt;digitization&lt;/em&gt;. It &lt;strong&gt;was not&lt;/strong&gt; a digital transformation. At the beginning of the pandemic, I can’t fault leaders for this response; they did the best they could to maintain any semblance of “normal” even in the most adverse conditions-&lt;/p&gt;

&lt;p&gt;-even if that meant attempting rituals that were a poor fit for this new reality. A cringe-worthy example was the rash of post-pandemic “virtual happy hours”. The attempts to connect came from a place of good-intentions: replicate the after-hours get together to foster a sense of team. People assumed they’d do the same thing as before but BYOB over Zoom with everyone working from home.&lt;/p&gt;

&lt;p&gt;However, rather than being something to look forward to, these become loathsome, dreary affairs that only reminded people of how weird and isolated the pandemic made all of us. After a day filled with imperfect video meetings, the last thing most people wish for is more time at their makeshift desk, glued to the computer.&lt;/p&gt;

&lt;p&gt;Digital transformation requires examining these things that used to work, identifying what was valuable, and imbuing those properties in forms better adapted for change.&lt;/p&gt;

&lt;h2 id=&quot;how-would-you-advise-companies-to-take-on-digital-transformation-in-2022&quot;&gt;How would you advise companies to take on digital transformation in 2022?&lt;/h2&gt;

&lt;p&gt;Going into 2022, we have a better sense that there will not be an exact return to pre-pandemic “business-as-usual”. Leaders need to stop thinking about Band-Aids and temporary fixes while waiting to return to the way things were before. Instead, leaders need to take a hard look at which parts of their business fared better than others. Which areas were ill-suited to the rapid, consistent change? And how vital is fixing those areas before the next shock?&lt;/p&gt;

&lt;p&gt;Digital business design is the holistic organizational configuration of people (roles, accountabilities, structures, and skills), processes (workflows, routines, procedures), &lt;strong&gt;and then&lt;/strong&gt; technology (infrastructure and applications). Someone somewhere is experimenting with providing employees with meaning, connection, and advancement in these necessary new ways. That person can either be at your company or employed by a disruptive rival.&lt;/p&gt;

&lt;p&gt;Where are your experiments? How do you measure whether the new ways, made possible by digital technology, are better than the old ways? How are you discovering new, uninterruptible ways of delivering business value? If companies haven’t thought about or answered these questions, now is the time to start.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Nov 2021 00:00:00 -0600</pubDate>
        <link>https://matthewreinbold.com/2021/11/09/DigitalTransformation-YoureDoingItWrong/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/11/09/DigitalTransformation-YoureDoingItWrong/</guid>
        
        <category>digital transformation</category>
        
        <category>pandemic</category>
        
        <category>covid-19</category>
        
        <category>leadership</category>
        
        <category>management</category>
        
        <category>organizations</category>
        
        
      </item>
    
      <item>
        <title>Why is there no 'Correct' API Lifecycle?</title>
        <description>&lt;p&gt;Recently, my colleagues in the Postman Open Technologies Program and I were discussing API lifecycles. It quickly became apparent that we each had our own mental models for what was (and *most certainly &lt;strong&gt;was not&lt;/strong&gt; *) worthy of inclusion.&lt;/p&gt;

&lt;p&gt;A quick survey of search results hints that the industry has as many opinions about what constitutes an API lifecycle as we had:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://searchapparchitecture.techtarget.com/feature/5-stages-of-an-API-lifecycle-explained&quot;&gt;TechTarget has a five-step lifecycle&lt;/a&gt;: plan, dev, test, deploy, retire&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://apigee.com/about/cp/api-lifecycle-management&quot;&gt;Apigee promotes an 8-step version&lt;/a&gt;: design, develop, secure, publish, scale, monitor, analyze, monetize&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.axway.com/amplify-products/api-management/api-lifecycle-management&quot;&gt;Axway lists three steps&lt;/a&gt; (with many, many substeps): creation, control, consumption&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://swagger.io/blog/api-strategy/what-is-api-lifecycle-management/&quot;&gt;SmartBear mentions 5&lt;/a&gt;, but a &lt;em&gt;different&lt;/em&gt; five than TechTarget: planning and designing, developing, testing, deploying, retiring&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mulesoft.com/webinars/api/full-lifecycle-api-management-anypoint-platform&quot;&gt;Mulesoft mentions 4&lt;/a&gt;: design, implementation, security, management&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.redhat.com/blog/2019/02/25/full-api-lifecycle-management-a-primer&quot;&gt;Redhat features a confusing conjoined set of circles&lt;/a&gt;, and 13(!) kitchen-sink steps: strategy, design, mock, test, implement, deploy, secure, manage, discover, develop, consume, monitor, monetize&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The process that evolved during my time as Capital One’s Center of Excellence Director skewed heavily to the needs of a large, mature, and internal system. As a result, our API lifecycle:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Made no mention of monetization&lt;/li&gt;
  &lt;li&gt;Emphasized discrete team ownership and end-of-life elements&lt;/li&gt;
  &lt;li&gt;Hand-waved past development requires as code creation had its process, controls, and oversite group&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The process that resonated for us, eventually, was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Discover&lt;/strong&gt;: Has someone already solved this problem?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Define&lt;/strong&gt;: Who will own the work at a team and LOB level, what access models will be in place, what SLAs need to be met, etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Design&lt;/strong&gt;: Engage with stakeholders, make an OpenAPI representation, get feedback, iterate&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Develop&lt;/strong&gt;: Code the thing (subject to many, many other criteria outside the API group)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deploy&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deprecate&lt;/strong&gt;: Plan for ending or superseding with a subsequent version; includes communication plan, timeline expectations, etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Delete&lt;/strong&gt; Define what info sticks around for historical purposes while ensuring any executables, access tokens, and gateway routing is removed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So why all the variation? Why isn’t there a “right” or “correct” API lifecycle?&lt;/p&gt;

&lt;p&gt;I think the variation is largely because lifecycles are created within companies to generate particular outcomes. Nobody installs a lifecycle for the sake of having more to train and enforce. If sloppy design leads to losses in a competitive marketplace, a company should have an explicit “design” step in its lifecycle to drive better outcomes. If security has been a mish-mash, a dedicated “security” step should be elevated as part of a lifecycle process to prompt more focus on correcting that behavior.&lt;/p&gt;

&lt;p&gt;A monitoring company is sure to list monitoring as part of its lifecycle. A company that sells documentation software will also elevate documentation to a high-level concern. It will depend on the vendor, but whatever their product excels at will probably be part of whatever lifecycle they promote.&lt;/p&gt;

&lt;p&gt;With companies looking at instituting a lifecycle, I’d &lt;em&gt;first&lt;/em&gt; find the burning problem that would benefit from additional learning, creativity, and focus. That would be the first touchstone called out in the path between an idea’s inception and production runtime. I’d then continue to build up and out from there. Dropping an entire thirteen-step lifecycle where none previously existed isn’t just introducing a massive amount of disruption all at once - it also summons &lt;a href=&quot;https://matthewreinbold.com/2021/09/22/OvercomingChangeResistance/&quot;&gt;a proportional amount of resistance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/11/pond.png&quot; alt=&quot;A picture of geese on a pond with fall trees behind them.&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Nov 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/11/02/WhatIsTheAPILifecycle/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/11/02/WhatIsTheAPILifecycle/</guid>
        
        <category>API governance</category>
        
        <category>API lifecycle</category>
        
        <category>TechTarget</category>
        
        <category>Apigee</category>
        
        <category>Axway</category>
        
        <category>SmartBear</category>
        
        <category>Mulesoft</category>
        
        <category>Redhat</category>
        
        <category>Capital One</category>
        
        <category>change management</category>
        
        
      </item>
    
      <item>
        <title>Finding API Governance Balance With Polarity Mapping</title>
        <description>&lt;p&gt;Some of my most rewarding conversations in my professional career are when I coach folks on their emerging API governance needs. A common myth is that companies &lt;em&gt;must&lt;/em&gt; settle for one extreme decision-making structure or the other regarding governance. Either they grant API teams full autonomy and suffer from the fragmentation and associated overhead it brings. Or they gain alignment and consistency through centralized oversight and heavy bureaucratic processes while losing innovation opportunities.&lt;/p&gt;

&lt;p&gt;Unquestionably, anything done to an extreme can create negative consequences. However, in my experience, too many companies only see a total commitment to one position or another as their only option. What companies need, in reality, is a blending of the two approaches.&lt;/p&gt;

&lt;p&gt;How do we find the Goldilocks (the “just right”) amount of governance? With a &lt;em&gt;polarity map&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;reintroducing-the-polarity-map&quot;&gt;(Re)Introducing the Polarity Map&lt;/h2&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/11/polarity-map-template-full.png&quot; alt=&quot;&quot; /&gt;&lt;figcaption&gt;&lt;em&gt;Fig 1: An Empty Polarity Map; &lt;a href=&quot;https://jamboard.google.com/d/1H4Vj1I6SlgWUPUPCgfzqZIKBIrKNlARG9WJe5xXO180/edit?usp=sharing&quot;&gt;I've Made A Google Jamboard Template Available&lt;/a&gt; based on the example from &lt;a href=&quot;https://uxmastery.com/the-joys-of-polarity-mapping/&quot;&gt;UXMastery&lt;/a&gt;.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ruthmalan.com/Bredemeyer/Org_Dynamics_Masterclass_Overview.htm&quot;&gt;Ruth Malan’s Organizational Design Masterclass&lt;/a&gt; introduced me to polarity mapping. A polarity map recognizes there are benefits and unintended consequences with each extreme. It encourages participants to describe these in detail. Once we’ve identified benefits, we then discuss activities to achieve these desirable traits in our system. After that, we can define a series of measurable indicators. The purpose of these metrics is to signal when we’ve overcorrected and risk unbalancing the system.&lt;/p&gt;

&lt;p&gt;We might use polarity maps for a variety of “versus” articles popular software architecture:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Build versus Buy&lt;/li&gt;
  &lt;li&gt;Microservice versus Monolithic Architectures&lt;/li&gt;
  &lt;li&gt;Synchronous versus Asynchronous&lt;/li&gt;
  &lt;li&gt;Batch versus Real-Time&lt;/li&gt;
  &lt;li&gt;Testing versus Debugging&lt;/li&gt;
  &lt;li&gt;API-Design First versus API-Code First&lt;/li&gt;
  &lt;li&gt;Tabs versus Spaces (joking, kinda)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Polarity maps help explain a phenomenon I observed in previous roles: the “pendulum effect”. If we begin to fill in the map according to the “decentralized versus centralized” API governance, as I described in the beginning, the map looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/11/pm-02.png&quot; alt=&quot;&quot; /&gt;&lt;figcaption&gt;&lt;em&gt;Fig 2: A Beginning Polarity Map for Centralized Versus Decentralized Governance&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Most organizations start API governance in the upper left of the quadrant, “decentralized”: individual API teams have nearly total decision-making autonomy. While this is efficient initially, the problems with this model become more apparent as the size of the API ecosystem grows. The map represents this change with the downward arrow leading to the lower left quadrant.&lt;/p&gt;

&lt;p&gt;As the negatives accrue, support for the opposite pole, or “centralization”, grows. The organization seeks the benefits of the upper right quadrant. This change works, for a while, until the overcorrection creates its adverse effects. If we continue to follow the arrow’s path, we end up in the lower right area. When the downsides reach a critical mass, the organization moves back toward decentralized decision-making and repeats the process.&lt;/p&gt;

&lt;p&gt;By putting both extremes on a single plot, we can demonstrate benefits to both sides. Moreover, in establishing the oscillation between sides, we can make a case that adopting one or the other is not an argument to be won but a set of properties to balance.&lt;/p&gt;

&lt;h2 id=&quot;getting-started-with-a-sample-map&quot;&gt;Getting Started With A Sample Map&lt;/h2&gt;
&lt;p&gt;To illustrate the process, let’s walk through an example polarity map that shows what many burgeoning API ecosystems struggle with: *do we promote &lt;strong&gt;centralized&lt;/strong&gt; or &lt;strong&gt;decentralized&lt;/strong&gt; API management?&lt;/p&gt;

&lt;p&gt;When doing a polarity map, it is essential to remember that each will be different; every company has unique needs, people, goals, and available resources that impact what is listed. &lt;a href=&quot;https://en.wiktionary.org/wiki/YMMV#English&quot;&gt;YMMV&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, based on my own experience, a set of benefits and unintended consequences for both sides might look something like this:&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/11/pm-03.png&quot; alt=&quot;&quot; /&gt;&lt;figcaption&gt;&lt;em&gt;Fig 3: An API Governance Polarity Map With Example Benefits and Unintended Consequences&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h2 id=&quot;defining-action-steps-and-early-warnings&quot;&gt;Defining Action Steps and Early Warnings&lt;/h2&gt;

&lt;p&gt;Defining &lt;em&gt;benefits&lt;/em&gt; and &lt;em&gt;unintended consequences&lt;/em&gt; is a significant first step. Talking through effects and their placement on the map is beneficial for building organizational or API leadership team alignment. Where things get truly useful is going to the next level and identifying &lt;strong&gt;action steps&lt;/strong&gt; and &lt;strong&gt;early warnings&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/11/pm-04.png&quot; alt=&quot;&quot; /&gt;&lt;figcaption&gt;&lt;em&gt;Fig 4: A Polarity Map with Action Steps and Early Warnings Added&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Action Steps&lt;/strong&gt; are how we will gain or maintain the positive results from focusing on a given pole.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Early Warnings&lt;/strong&gt; are quantifiable indicators to signal when a system is straying into the downside of a pole.&lt;/p&gt;

&lt;p&gt;Suppose we want to take actions to promote the positive aspects of centralization (the upper right: “visibility”, “predictability”, “consistency”, etc.). Action may include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Documenting API standard operating procedures (including, but not limited to, style guides, production environment readiness requirements, &lt;a href=&quot;https://adr.github.io/&quot;&gt;architectural decision records for changes&lt;/a&gt;, etc.)&lt;/li&gt;
  &lt;li&gt;Creating compensation or recognition structures for teams demonstrating API excellence&lt;/li&gt;
  &lt;li&gt;Forging communication channels to both promote the best work as well as solicit feedback for further refinement&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Early warnings for the centralized side of the map may be more challenging to define but not impossible. There could be a problem if there’s a growing clamor of teams waiting on the centralized group for a decision, or a noticeable uptick in meetings to reconcile a tricky edge case. Identify which areas are of most concern for your organization, identify how to quantify changes, and continue to iterate until you have something actionable.&lt;/p&gt;

&lt;p&gt;The left side is left as an exercise for the reader.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Polarities&lt;/strong&gt; involve two equally valid and necessary points of view or truths. Despite how we usually think of them, polarities are interdependent pairs that need each other to maintain and gain performance.&lt;/p&gt;

&lt;p&gt;A polarity map is a tool that API leaders can use to  understand where they are in the system and accentuate positive aspects of both worlds. When it comes to API ecosystems, polarity maps suggest that centralized or decentralized decision-making is not final governance destinations but part of a whole to be managed.&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Nov 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/11/01/PolarityMappingAndAPIGovernance/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/11/01/PolarityMappingAndAPIGovernance/</guid>
        
        <category>API governance</category>
        
        <category>Ruth Malan</category>
        
        <category>polarity mapping</category>
        
        <category>organizations</category>
        
        
      </item>
    
      <item>
        <title>We Made an API Description, Now What?</title>
        <description>&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_01.png&quot; alt=&quot;Title slide for the deck.&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;First of all, thank you for being here. I hope you’re healthy and you’re safe, and those that you care about are secure as well. We’ll get through this. I’m sure of it, and someday we will see each other again in person. However, until then, thank goodness we have these kinds of arrangements to share and continue to learn from one another in some form.&lt;/p&gt;

&lt;p&gt;This presentation is entitled “We wrote an API description, now what?”&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_02.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;In many organizations, OpenAPI has become the way to capture and share API intent and function. In API-Design-First shops, the creation of an OpenAPI description is required.&lt;/p&gt;

&lt;p&gt;But after you’ve created this machine-parsable description, what is next? How do you get the most significant amount of ROI for the time and energy you invested in it? How are others using their OpenAPI artifacts beyond just documentation? And how do you get started? I’ll answer those questions and more in this talk.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_03.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;My name is Matthew Reinbold, and I am Postman’s Director of API Ecosystems and Digital Transformation.&lt;/p&gt;

&lt;p&gt;At Postman, I’m a member of the Open Technologies Program. Our mission is to improve API practice, education, and research for companies of all shapes and sizes.&lt;/p&gt;

&lt;p&gt;In addition to that, I also write a weekly API email newsletter. The amount of API-related things published on the web can be overwhelming; Net API Notes started as my attempt to filter the signal from noise - it just turned out that the persistent act of sense-making was valuable to others as well. It also prepares me for conversations like the one we’ll have today.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_04.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;First, though, let’s establish a few things. I’m not going to cover the history of how OpenAPI and AsyncAPI became nearly the defacto API specifications. There are plenty of other talks covering that ground in greater detail - some at this very conference!&lt;/p&gt;

&lt;p&gt;However, I do want to clarify how I will use a couple phrases of throughout this presentation. If you use these words differently in your day-to-day work, that is completely fine. For this presentation, however, when I say &lt;strong&gt;API Specification&lt;/strong&gt;, I refer to the specific documented, syntactical requirements an API designer writes to. Examples of API specifications include OpenAPI and AsyncAPI.&lt;/p&gt;

&lt;p&gt;When I talk about an &lt;strong&gt;API Definition&lt;/strong&gt;, I refer to the JSON or YAML document that captures your unique API’s business intent, written to meet a specification requirement.&lt;/p&gt;

&lt;p&gt;Again, when I talk about an API specification, I talk about what a standards body writes. When I talk about an API definition, I am talking about what you write.&lt;/p&gt;

&lt;p&gt;Also - in this presentation, I will be sharing or referencing numerous links. If you are interested in those links and don’t want to wait until this presentation is published on my website, go over Twitter and look up the username libel_vox, shown in the footer. &lt;a href=&quot;https://twitter.com/libel_vox/status/1442929462685757441&quot;&gt;All the links are in a Tweet pinned to my profile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_05.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Let’s start by rewinding the clock.&lt;/p&gt;

&lt;p&gt;Guido of Arezzo (ur-EH-zoe) was a Benedictine monk living in Italy at the turn of the millennium before last, around 1000 AD. And Guido had a standardized notation problem.&lt;/p&gt;

&lt;p&gt;At the time, the pinnacle of popular music was liturgical chants. People went crazy for them. But as Guido visited churches, he noticed how much younger singers struggled to learn the songs.&lt;/p&gt;

&lt;p&gt;It was common to have parchments with the words and some occasional squiggles that suggested the performer move their voice higher or lower. However, there was no representation of pitch.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image source: original uploader was Robbot at Dutch Wikipedia. - &lt;a href=&quot;https://commons.wikimedia.org/w/index.php?curid=1621845*&quot;&gt;Transferred from nl.wikipedia to Commons., Public Domain&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_06.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;The solution, Guido reasoned, was to invent a means that would allow someone to sing along even if they had never heard the music before.&lt;/p&gt;

&lt;p&gt;So Guido invented the staff. With fixed notes and a specification for conveying them, young students could “better detect the level of pitch”, as Guido wrote.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_07.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;People new to APIs also have trouble getting started. And API documentation is usually the first thing people think of when they think of what to do with an API description. Unfortunately, that’s often where it ends, too.&lt;/p&gt;

&lt;p&gt;The image on the slide is a grossly simplified development process, but one that is all too common. In it, a bunch of work is done to create a thing and, when it is ready to “go live”, some documentation is made for “the customer”.&lt;/p&gt;

&lt;p&gt;Don’t get me wrong - documentation made this way is better than a random PDF or CMS entry - both of those are akin to non-uniform random squiggles Guido’s students previously had. There are many places where you can insert an OpenAPI description and get out some beautifully rendered documentation, either for your dev portal or for sharing with a customer.&lt;/p&gt;

&lt;p&gt;However, documenting at the end means that the context and nuance of why something is the way it is has to be recreated and reassembled. Because of this, things get left out. The API description, when treated this way, becomes lipstick on a pig.&lt;/p&gt;

&lt;p&gt;If you’re composing music, one doesn’t wait until the entire song is done before writing something down. In the same way, we need to think about API descriptions as not something that comes at the end but a means at the center of creating a better result in multiple ways.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_08.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;A standardized representation of intent, or an API description, can be used for more than documentation.&lt;/p&gt;

&lt;p&gt;If we start treating our API description as our central source of truth about the API, rather than an afterthought or “nice-to-have” documentation, a whole host of options open up.&lt;/p&gt;

&lt;p&gt;For the rest of this presentation, I am going to detail four areas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Code Generation&lt;/li&gt;
  &lt;li&gt;Testing&lt;/li&gt;
  &lt;li&gt;Monitoring&lt;/li&gt;
  &lt;li&gt;Governance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After that, I’m going to extrapolate a bit.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_09.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;First, let’s talk about code generation. If you have an API description, whether yours or an API you wish to consume, you are well on your way to having code generated for you.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_10.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;There is no shortage of client code generators available. The &lt;a href=&quot;https://github.com/openapitools/openapi-generator&quot;&gt;Open-API generator&lt;/a&gt; supports an incredible number of programming languages. I had to make the type super, super tiny on this slide to fit them all in.&lt;/p&gt;

&lt;p&gt;I’ll admit that generators won’t write everything. However, getting the tedious, non-differentiated boilerplate out of the way through generation is a huge time saver.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_11.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;And it isn’t just client code! You can also stub out a server implementation if you have an OpenAPI description of how an API works.&lt;/p&gt;

&lt;p&gt;In the slide, I have a picture of Postman’s interface. I’ve loaded an OpenAPI 3.0 description. Next to the YAML syntax, I have a button that allows me to create the beginnings of my server code with just a couple of clicks.&lt;/p&gt;

&lt;p&gt;Servers include Go (Chi), NodeJS (Express), Java (JAX-RS), and Python (Flask). That is a compelling way to kickstart new development and the next logical step with what we can do with these API descriptions.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_12.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;It is also possible to generate SDKs from OpenAPI descriptions.&lt;/p&gt;

&lt;p&gt;One of the problems with SDKs is finding the team bandwidth to keep feature parity across multiple languages, especially during rapid change. &lt;a href=&quot;https://plaid.com/blog/adopting-the-openapi-schema-to-generate-plaids-sdks&quot;&gt;Plaid has a fantastic case study&lt;/a&gt; detailing how they automatically keep a broad suite of beneficial SDKs in sync and up to date from their OpenAPI sources of truth.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_13.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;But it’s not just code that we can generate. Let’s take it to the next level and talk about generating code to test code!&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_14.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Testing an API is one of the most important things to do. However, not all testing is created equal.&lt;/p&gt;

&lt;p&gt;At the bottom of this pyramid of testing needs, we need to make sure our response payload is as expected; making sure that when we make a request we get the response we intended in the shape expected.&lt;/p&gt;

&lt;p&gt;Next up, we have chaining HTTP calls. Once we know that one request works the way we assume, we start using it in conjunction with other calls as part of more advanced workflows.&lt;/p&gt;

&lt;p&gt;Moving upwards, we have data-driven requests. This level is where we take our static requests and begin to change the data provided. In doing so, we being discovering the rough edges and uncovering assumptions about ongoing usage.&lt;/p&gt;

&lt;p&gt;Nearing the top are negative tests and error flows. In other words, at this level we’re purposely stepping off the “happy path” and evaluating how gracefully the API fails.&lt;/p&gt;

&lt;p&gt;Finally, at the top of the pyramid, we have contract testing. Testing at this level is no longer about the API we’re creating but verifying the consistent behavior of other APIs we might be dependent on.&lt;/p&gt;

&lt;p&gt;Like many pyramids, every level is sized in approximate proportion to how much effort should be expended. So, for example, companies should spend a large amount of effort verifying that the response payloads are structured correctly or at the bottommost level before moving upwards.&lt;/p&gt;

&lt;p&gt;However, where people should put the bulk of their effort also happens to be some of the most tedious work. Therefore, it is a no-brainer that we leverage an API description to provide the necessary coverage.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://tinyletter.com/NetAPINotes/letters/net-api-notes-for-2021-08-04-issue-170&quot;&gt;This version of the API testing pyramid inspired by the test pyramid featured in Net API Notes Issue 170&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_15.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;A valid OpenAPI document inside Postman can be used to create test cases to be run across multiple endpoints. Or you can customize on a per-endpoint basis. Like code generation, generating tests free brain cycles on solving higher-level, more challenging problems.&lt;/p&gt;

&lt;p&gt;That generation is possible because we have a standardized notation that conveys our intent even if we haven’t seen the API before.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_16.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Things get really interesting when we take that code and tests that we previously created and connect it to automation. We are now able to aggregate and monitor a complex system. We can “see” not just individual APIs for the trees they are. Instead, monitoring whole collections of APIs gives us a sense of the larger forest.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_17.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Recently, Postman’s founder, Abhinav, &lt;a href=&quot;https://blog.postman.com/new-postman-api-platform-redefining-api-management-for-api-first-world/&quot;&gt;shared a vision of the API platform landscape&lt;/a&gt;. And there are many companies in that view that perform what we call API monitoring: using a remote computer to send requests to an API on a scheduled basis.&lt;/p&gt;

&lt;p&gt;But ensuring that an API is running or not is the same thing we were doing a decade ago. It is important, but it also scratches the surface of the complex automation possible with API descriptions and some simple bridge code.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_18.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Many are familiar with the website, If-This-Then-That (IFTTT). With API descriptions, creating workflows via the Postman monitor is nearly as easy.&lt;/p&gt;

&lt;p&gt;As I mentioned, the purpose of the Postman Open Technology Program is to elevate API practice across all industries. As you might imagine, that entails a lot of writing. Rather than just using a monitor to tell me whether services I care about are up or down, I created a workflow to prompt me to complete my writing.&lt;/p&gt;

&lt;p&gt;I used an OpenAPI description to create a call to my cloud-hosted markdown editor. That gets me the words I’ve written so far daily. I put together some logic to not worry about weekends because the worst thing is stress-inducing notifications during recovery time. Finally, I merged that with the results from another OpenAPI description that gets and parses US holidays - again, alarms aren’t going off when I am recuperating.&lt;/p&gt;

&lt;p&gt;It does require a &lt;em&gt;bit&lt;/em&gt; more work than dragging lines between colorful chicklets (Rest In Peace, Yahoo! Pipes!). However, if you have standardized service representation, exciting workflow automation is at your fingertips. We’ve gone beyond just testing APIs to creating &lt;strong&gt;low-code solutions&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;That’s empowering for the people in your organizations who may not be full-blown developers but still want to take advantage of information and services already available.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_19.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;That brings us to governance.&lt;/p&gt;

&lt;p&gt;An API journey doesn’t start with a cast of thousands. For most companies, their first API began as a targeted means to a specific business end. Scaling architectures, processes, training, and tooling was far from the minds of all involved at the onset, as it should be - a town doesn’t build its public works department when there are only a few homesteads.&lt;/p&gt;

&lt;p&gt;However, with more people creating APIs more experiences, architectural styles, and bespoke infrastructure are introduced into the growing API ecosystem. In the absence of repeatable processes, preferred techniques, or uniform tooling, the results from API production will become unpredictable - coordination costs across unaligned pockets of practice increase along with inefficiency. Higher-order alignment suffers. As described in the book Accelerate, “teams become adrift, concentrated on micro-optimizations disconnected from aligned business delivery”.&lt;/p&gt;

&lt;p&gt;Somebody needs to be concerned with those higher-order concerns and the health of the ecosystem. Many might assume that necessitates a cumbersome, gatekeeping API review. However, with API descriptions, there are several lightweight, helpful things we can do to encourage alignment while maintaining team autonomy.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_20.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;To create consistency in approaches, many companies create API style guides. But just having a proposal of what people should do is not enough. Just because something is written down does not mean it will be interpreted and presented in an API description the same way.&lt;/p&gt;

&lt;p&gt;In the slide, in gray, I have an example suggestion for pagination that you might find in a style guide. It encourages the developer to use the words “limit” and “offset” when giving callers the ability to page through a collection of items.&lt;/p&gt;

&lt;p&gt;That may seem straightforward. However, what happens in practice is something akin to what appears on the left side of the slide, in purple. Yes, the author included the words “limit” and “offset”. But the articulation of how these two keywords are used is still vague. As a caller of this API, we may assume that both are numeric values with some certainty. However, several questions remain. Is there a maximum value for “limit”? Is offset 0-indexed? What is the default page size?  Are these values to be passed only as query params, or do they also work as header values?&lt;/p&gt;

&lt;p&gt;The API description on the left meets the letter of the law, but not the spirit; this API’s user has to spend additional time and energy to figure out how it works.&lt;/p&gt;

&lt;p&gt;So should we berate an API designer, especially one new to the company, for not magically including all the additional verbiage of the right-hand example? OF COURSE NOT!  “Just knowing” is hard. The style guide should make doing the right thing easy! Rather than leaving the right thing up to interpretation, the style guide should provide the desired YAML or JSON representations for anyone to copy and paste into their designs.&lt;/p&gt;

&lt;p&gt;It sounds straightforward because it is! Creating meaningful templates and snippets that solve everyday problems creates alignment because you’ve made doing the right thing easy.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://matthewreinbold.com/2021/08/18/OneWayToImproveAPIGuidance/&quot;&gt;I’m written more about these approaches on my website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_21.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Similarly, several tools can parse an API description and nudge practice to a healthier place. Using tools in this way is a much healthier practice than manual reviews, where suddenly it is a contest of will over who is right.&lt;/p&gt;

&lt;p&gt;There are a &lt;em&gt;ton&lt;/em&gt; of API validators. &lt;a href=&quot;https://openapi.tools/&quot;&gt;OpenAPI.tools&lt;/a&gt;, the picture on the left, does a fantastic job of categorizing many of them.&lt;/p&gt;

&lt;p&gt;Likewise, the &lt;a href=&quot;https://mermade.org.uk/openapi-converter&quot;&gt;OpenAPI Converter&lt;/a&gt; can also take an API description in a variety of formats. Both can be used to ensure an API description adherence to expectations, thus avoiding fragmentation.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_22.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Security is a pressing issue at the moment. As I’m showing here in the slide, the tool is warning the API author that not only are they not providing any authorization for these endpoints, but the entirety of communication is happening over unsecured HTTP.&lt;/p&gt;

&lt;p&gt;We’ll continue to see tooling get more opinionated. Thus better supporting API designers with insights when it is most beneficial - while they are designing.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_23.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;That was a quick run through four areas - code gen, testing, monitoring, and governance that can benefit today from a description-centric approach. But let’s go even further. What happens when entire industries can sing from the same songbook?&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_24.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=csHOifygBA0&quot;&gt;I love this story that Jean Yang, founder and CEO of Akita software, shared recently&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The goal of Akita software was to help developers make sense of their complex distributed systems. They began to approach the problem in a systems way and briefly considered integration with open telemetry or maybe integrate with a service mesh like Envoy. The problem was that there had been no standardization; not everybody uses a service mesh, and when they do, it isn’t always Envoy!&lt;/p&gt;

&lt;p&gt;Akita realized that APIs provided a standardized point that was uniformly consistent across all providers, architectures, and languages. Because services had adopted this common lingua franca, they were able to build a new set of observations and insights.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_25.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Likewise, &lt;a href=&quot;https://www.stedi.com/&quot;&gt;a company called Stedi is doing some fantastic things&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;EDI, or Electronic Data Interchange, has been around since the 1970s. It attempts to standardize the exchange of business information, like purchase orders and invoices.&lt;/p&gt;

&lt;p&gt;Stedi applies modern approaches to schema validation, like JSON schema, to EDI. In the process, a whole suite of modern tooling can be leveraged for working with legacy formats; unlocking new value and opportunities in the process.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_26.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;In conclusion, back to this guy - back to Guido.&lt;/p&gt;

&lt;p&gt;In the centuries since Guido invented standardized musical notation, there were many additions. First there was duration. Then barlines, stylized clefs, dynamic markings, ties, and slurs were added. These changes supported a growing number of instruments and vocal styles.&lt;/p&gt;

&lt;p&gt;Music grew beyond liturgical chants. The Renaissance era, where music tended to remain on a single tempo for the duration of the piece, gave way to the Baroque period, one marked by increased composition creativity. Baroque also established the opera, concerto, and sonata as musical genres.&lt;/p&gt;

&lt;p&gt;This expansion didn’t happen in isolation. It is no coincidence that this creativity occurred when people had a greater ability to capture and share their intent. The development of a standardized notation, a specification, allowed composers to cross-pollinate, enrich, and evolve each others’ work.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_27.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;But unless you’re a music nerd, that may be trivia. Let’s make this less abstract.&lt;/p&gt;

&lt;p&gt;To help students remember his new standard, Guido also invented something else you might be familiar with; a mnemonic that helps people remember the steps between tones on his staff. You probably know it: do-re-mi.&lt;/p&gt;

&lt;p&gt;That mnemonic is featured prominently in the 1965 film Sound of Music. That film, and the von Trapp children within, was seen by millions - including my wife and me.&lt;/p&gt;

&lt;p&gt;I don’t have a Gretl, but I have a Greta. I also have a Liesel. Guido, in 1000 AD, wouldn’t know what a movie was, let alone comprehend his influence on it. Furthermore, he couldn’t conceive how a standard representation would ultimately influence my daughters’ names. &lt;em&gt;But it did&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Swagger, the predecessor of the OpenAPI specification, came out in 2010, a little more than a decade ago! It’s not even a teenager yet!&lt;/p&gt;

&lt;p&gt;Emergence from complex systems is an unpredictable thing. Our APIs ecosystems are complex systems. Who knows what future will emerge from the API descriptions that we create and share today? Whatever it is, I can’t wait to see what’s next.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_28.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Thank you so much for your time. If you want to get ahold of me, you can go to my website. You can also check out my email newsletter, and I’m pretty responsive on Twitter.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/10/ASC 2021 - Wrote an API Description, Now What_29.png&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Thanks again!&lt;/p&gt;

</description>
        <pubDate>Fri, 01 Oct 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/10/01/WeMadeAnAPIDescription/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/10/01/WeMadeAnAPIDescription/</guid>
        
        <category>API governance</category>
        
        <category>OpenAPI</category>
        
        <category>Postman</category>
        
        <category>Net API Notes</category>
        
        <category>AsyncAPI</category>
        
        <category>JSON</category>
        
        <category>YAML</category>
        
        <category>Guido of Arezzo</category>
        
        <category>music</category>
        
        <category>documentation</category>
        
        <category>OpenAPI-Generator</category>
        
        <category>code generation</category>
        
        <category>testing</category>
        
        <category>monitoring</category>
        
        <category>Accelerate</category>
        
        <category>API descriptions</category>
        
        <category>OpenAPI.tools</category>
        
        <category>Jean Yang</category>
        
        <category>Akita</category>
        
        <category>Stedi</category>
        
        <category>EDI</category>
        
        <category>Sound of Music</category>
        
        
      </item>
    
      <item>
        <title>Overcoming Change Resistance</title>
        <description>&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/09/lets-change.png&quot; alt=&quot;A sign outside a building that says 'Let's Change'.&quot; /&gt;
Photo by &lt;a href=&quot;https://unsplash.com/@visualsbybrad?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Brad Starkey&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/change?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;
  &lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;You’ve got an excellent idea for your organization. You’ve spent time &lt;a href=&quot;https://matthewreinbold.com/2021/09/10/CreatingCompellingStories/&quot;&gt;carefully crafting your story&lt;/a&gt; and begin to share it. Then something begins to happen; perhaps there isn’t anything as dramatic as a slammed door or “NO” screamed in all caps. But there’s a hesitation, an avoidance, or an ongoing series of “&lt;a href=&quot;https://en.wikipedia.org/wiki/Whataboutism&quot;&gt;whataboutism&lt;/a&gt;” that increasingly frustrates and drains energy. Congratulations, change agent! You’ve met &lt;strong&gt;resistance&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Workplace changes are &lt;em&gt;sociotechnical&lt;/em&gt;, or having both a technical and a social aspect. The technical change part is the mechanics of how a task is performed. There might be technical detail and nuance to be debated. However, what is a far more significant source of resistance is the social aspect of the change. &lt;em&gt;Social&lt;/em&gt; refers to how those affected by the change believe it will &lt;em&gt;alter their organizational relationships&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Change, even wholesome, necessary, and positive, can provoke a sense of loss in individuals. Sometimes this sense of loss is legitimate, like when a company closes down its “innovation hub” or no longer recognizes “Quality Assurance (QA)” as distinct from the engineering job family. In other situations, the change is perceived as a loss of dominance, control, power, and/or a sense of familiarity.&lt;/p&gt;

&lt;p&gt;People react to loss in different ways.&lt;/p&gt;

&lt;h2 id=&quot;resisting-change&quot;&gt;Resisting Change&lt;/h2&gt;
&lt;p&gt;In one case, they dig in and close down. Those resisting demand what is lost be returned. &lt;a href=&quot;https://matthewreinbold.com/2021/09/10/CreatingCompellingStories/&quot;&gt;Without a recognized, new identity for the participants&lt;/a&gt;, our change narrative induces a counter-narrative: an energetic incitement to &lt;em&gt;return to the way things were&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hbr.org/1969/01/how-to-deal-with-resistance-to-change&quot;&gt;As this classic 1969 Harvard Business Review article by American sociologist Paul R. Lawrence states&lt;/a&gt;, resistance manifests as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“persistent reduction in output, an increase in the number of “quits” and requests for transfer, chronic quarrels, sullen hostility, wildcat or slowdown strikes, and, of course, the expression of a lot of pseudological reasons why the change will not work. Even the more petty forms of this resistance can be troublesome.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This response is so typical that many executives assume resistance to anything is inevitable. Yet, changes must occur for businesses to thrive. This doubly for the all-important “little” changes that constantly take place: changes in work methods, in routine office procedures, in the location of a machine or a desk, in personnel assignments and job titles.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“You never want a perfectly fit, coherent, and therefore stable system (therein lies stasis and death)… for a system to evolve and thereby persist over time requires a certain (unspecified!) resilience more so than stability.” – Alicia Juarrero&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;opening-oneself-and-others-to-change&quot;&gt;Opening Oneself (And Others) To Change&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;other&lt;/em&gt; way people might respond is to &lt;strong&gt;open up&lt;/strong&gt;. This opening requires a shared assumption that there is something new here and that we will find our way into that newness together. What does that mean, practically?&lt;/p&gt;

&lt;p&gt;The easiest way to getting buy-in to a change is when those affected by it are co-creators. While this participation may sound simple in theory, in practice, it does entail careful handling. Participation &lt;em&gt;is a feeling on the part of people&lt;/em&gt;, a belief that their needs are being heard and concerns addressed. Participation &lt;em&gt;is not&lt;/em&gt; inviting people to comment or attend a meeting and checking the box ‘done’. Employees must be treated as having treasured insight and opinions rather than a target to be pumped for carefully calculated questions.&lt;/p&gt;

&lt;p&gt;That is why the identity piece of our storytelling is so critical. A future vision they can relate to, and the relationships it entails, will mitigate the sense of social loss.&lt;/p&gt;

&lt;h2 id=&quot;an-api-governance-example&quot;&gt;An API Governance Example&lt;/h2&gt;
&lt;p&gt;As companies grow, the complexity introduced due to fragmented API design approaches and ad-hoc, laissez-faire governance drowns any benefit the API ecosystem had while new. In this state, integrations take longer, meetings go up, and estimates get more untrustworthy.&lt;/p&gt;

&lt;p&gt;As a result, leadership may move to establish one of any number of groups: Centers of Excellence, Design Guilds, Architectural Review Board, or API Champions. The expectation is that these specialists are inserted between the “doers” and the production environment. Their job is to ensure that designs are “done right”, mitigating the mishmash (and related overhead) that the organization increasingly toils under.&lt;/p&gt;

&lt;p&gt;The problem with this approach, if done unilaterally, is that leadership has introduced not only a technical change - the specific THOU SHALL and THOU SHALL NOT that moves an architectural style from &lt;em&gt;descriptive&lt;/em&gt; to &lt;em&gt;prescriptive&lt;/em&gt;. They have also changed an API developer’s relationship with the organization by inserting an oversite group in the pipeline. The usual work relationships, not just between developers and their peers, but developers and their environments, were changed.&lt;/p&gt;

&lt;p&gt;As I discussed above, changing the social relationships nets more than just “&lt;a href=&quot;https://en.wikipedia.org/wiki/Who_Moved_My_Cheese%3F&quot;&gt;who moved my cheese&lt;/a&gt;” or “&lt;a href=&quot;https://www.ftrain.com/wwic&quot;&gt;why wasn’t I consulted&lt;/a&gt;” whinging. The sense of loss breeds resentment, resentment creates low morale, and the quality and alignment initiative meets resistance.&lt;/p&gt;

&lt;p&gt;That doesn’t mean the idea to decrease fragmentation and improve design cohesion was a bad one! What it means, instead, is that a different approach is needed. Rather than a top-down directive that changes the entire organization’s working relationships, the affected parts of the organization should be invited to co-create the change.&lt;/p&gt;

&lt;p&gt;That includes &lt;em&gt;listening first, talking second&lt;/em&gt;. It could be that not everyone agrees on what the problem &lt;em&gt;is&lt;/em&gt;. If people are given a chance to come up with ideas, discuss the ideas of others, or otherwise be involved in the process, they’ll become invested in the change and understand it better. It is also easier to build a future inclusive identity in your narrative if those people were involved in defining that identity.&lt;/p&gt;

&lt;h2 id=&quot;in-conclusion&quot;&gt;In Conclusion&lt;/h2&gt;
&lt;p&gt;Change has both a technical and a social aspect. The technical aspect of change is about making a measurable modification in the job’s routines or practices. Change’s social aspect refers to the way those affected by change think it will alter relationships.&lt;/p&gt;

&lt;p&gt;If we can get better about addressing the social needs of people during change, we will better positioned for long term success. Again, from the 1969 article:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The significance of these research findings, from management’s point of view, is that executives and staff experts need not expertness in using the devices of participation but a real understanding, in depth and detail, of the specific social arrangements that will be sustained or threatened by the change or by the way in which it is introduced.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Technologies come and go. But people remain the same.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Sep 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/09/22/OvercomingChangeResistance/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/09/22/OvercomingChangeResistance/</guid>
        
        <category>API governance</category>
        
        <category>organizations</category>
        
        <category>communication</category>
        
        <category>management</category>
        
        <category>change</category>
        
        
      </item>
    
      <item>
        <title>Creating Compelling Stories</title>
        <description>&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/09/hermes-rocket-typewriter.png&quot; alt=&quot;A picture of my Hermes Rocket typewriter.&quot; /&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://matthewreinbold.com/2021/09/03/PlausiblePromises/&quot;&gt;my last post&lt;/a&gt;, I talked about the importance of creating a &lt;em&gt;plausible promise&lt;/em&gt; for system change. To briefly recap, a plausible promise must be (1) inspiring enough to attract others to participate and (2) stand a believable shot of happening given all other constraints.&lt;/p&gt;

&lt;p&gt;But what happens when a change agent needs more than the elevator pitch? How does one move from a plausible promise to a compelling change narrative? The answer is &lt;em&gt;crafting a compelling story for systems change&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;why-stories&quot;&gt;Why Stories?&lt;/h2&gt;
&lt;p&gt;Storytelling is for more than just screenwriters and teenagers past curfew. Stories are how we articulate the world, our place in it, and &lt;em&gt;the ability to change&lt;/em&gt;. “We’re all-in on the cloud” and “We’re an agile shop” are both story excerpts companies retell to shorthand how their technical work should be done.&lt;/p&gt;

&lt;p&gt;Stories, particularly those repeated within organizations:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Appeal to our emotions, moving us to act in a way that dry, dispassionate analysis fails to (“I empathize with your pain.”)&lt;/li&gt;
  &lt;li&gt;Simplify the complexity of the unknown unknows into a logical, repeatable set of causal relationships (“I now have words for what was just a gut feeling.”)&lt;/li&gt;
  &lt;li&gt;Make abstract phenomenon tangible and thus changeable (“I can get my arms around it.”)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Change begins when one of the existing stories begins to fail. This faltering could be due to scaling challenges, a strategic pivot, or marketplace disruption. Whatever the reason, the old narratives no longer work or seem incomplete given increased business complexity. When this happens, it is time to tell new stories.&lt;/p&gt;

&lt;h2 id=&quot;parts-of-a-motivating-story&quot;&gt;Parts of a Motivating Story&lt;/h2&gt;
&lt;p&gt;Ask five aspiring authors what makes a good story, and you’ll get six answers, two podcast recommendations, and the odd existential crisis. When it comes to systems change, however, the components are well known. To inspire change, a story must have the following elements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A Clear Articulation of the Current State&lt;/li&gt;
  &lt;li&gt;An Attractive Future&lt;/li&gt;
  &lt;li&gt;A New Identity For Participants&lt;/li&gt;
  &lt;li&gt;A Path Connecting It All Together&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-clear-articulation-of-the-current-state&quot;&gt;A Clear Articulation of the Current State&lt;/h3&gt;
&lt;p&gt;Context frames and gives meaning to the change that must take place.&lt;/p&gt;

&lt;p&gt;A story	of transition will highlight how the past way of doing things	 is unsustainable, how it has lead to the current crisis, which requires	new ideas (your ideas!)	to overcome.&lt;/p&gt;

&lt;h3 id=&quot;an-attractive-future&quot;&gt;An Attractive Future&lt;/h3&gt;
&lt;p&gt;During disruption, past data is a poor predictor of a future state. Faced with uncertainty, people often take what they know about the past, combine it with their assumptions and emotional state, and project it on to the future, largely unconsciously. Deconstructing a group’s assumptions and projections about the future requires careful analysis. If we can identify which beliefs are steadfast and which are loosely held, we can navigate this potential minefield.&lt;/p&gt;

&lt;p&gt;A story must emphasize that the future is not a fixed, predetermined point but something that can be changed. We can’t predict the future, but we can try to invent one with more desirable outcomes. If instituting a change is worth doing, we have to have a coherent story about the new possibilities.&lt;/p&gt;

&lt;h3 id=&quot;a-new-identity-for-participants&quot;&gt;A New Identity For Participants&lt;/h3&gt;

&lt;p&gt;System change requires working in new configurations, often with new (to you) people. Stepping beyond the comfort zone of our friends and colleagues means engaging with strangers and opponents who may not have a shared understanding.	A story should enable people to recognize their	shared interdependence in the system, thus creating a shared	identity. It must show how the sub-optimal future cannot be solved by individual stakeholders alone and how a new network with new relationships can.&lt;/p&gt;

&lt;p&gt;Keep in mind, creating change &lt;em&gt;may not&lt;/em&gt; require everyone. It does, however, need to connect the people that need connecting.&lt;/p&gt;

&lt;h3 id=&quot;a-path-connecting-it-together&quot;&gt;A Path Connecting It Together&lt;/h3&gt;
&lt;p&gt;Above all, a story must point people in the direction of needed change. Part of this includes articulation of what progress along the path looks and feels like.&lt;/p&gt;

&lt;p&gt;A vital aspect of a story is how it links current actions to the desired future destination. Connecting these things increases the understanding of our responsibility and agency within a system.&lt;/p&gt;

&lt;p&gt;The path storytelling should emphasize more positive than negative. Change spurred by intrinsic motivation is more sustainable, or those internalized stories rooted in people’s strengths, aspirations, and ability to overcome.&lt;/p&gt;

&lt;h2 id=&quot;a-remote-work-example&quot;&gt;A Remote Work Example&lt;/h2&gt;

&lt;p&gt;Let’s take what we’ve learned above and apply it to an area many businesses are currently wrestling with: remote work. Let’s assume that you’ve stumbled through the past eighteen months, but you’re looking for more.&lt;/p&gt;

&lt;p&gt;Articulate the current state:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Remote work has been around for some time. However, during the Covid-19 pandemic, millions of individuals were thrust into remote work situations not by choice but by necessity. Some companies were able to cope better than others. More than a year and with multiple variants continuing to spread, leaders are challenged to go from merely surviving to thriving. Talented individuals have come to expect remote options. Companies that insist on co-location at some unknown point in the future limit themselves to whatever expertise happens to be within a geographical area.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Craft the attractive future:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We need to move beyond thinking about remote work as a temporary band-aid. Moving office ritual and routine to a Zoom meeting is not enough (“virtual happy hours”, for example). Instead, we need to truly digitize the work, not just work digitally. Learning to do this effectively taps our organization into the best, brightest, and most diverse talent wherever they are in the world. It also positions our org for a future where adaptation and iteration will be the norm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Define a new identity:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Getting there will require new management techniques. Communication is always a vital skill. But we must learn how to go beyond lowest-common denominator transactional interactions encouraged by digital tools to relational ones. Our managers and leaders need to be able to check-in with our employees, building trust and psychological safety, not just checking-up on WIP. If our managers can demonstrate the more significant empathic requirements of remote management, our people will deliver greater value while enjoying increased flexibility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A Path To Connect It All Together&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We need to revise our operating procedures, training focus, and performance review characteristics to get to that future. There is precedent: Gitlab, a company with a $6 billion valuation, has no physical headquarters and employees in nearly 70 countries. Automattic, makers of WordPress and operators of Tumblr, employs almost 1700 remote employees. By learning from their examples to prioritize the appropriate digital investments, we will embrace the sort of change that is more &lt;a href=&quot;https://hbr.org/2020/10/what-it-takes-to-lead-through-an-era-of-exponential-change&quot;&gt;perpetual, pervasive, and exponential&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That’s just a generic example. If you were to do this for your organization, this remote story would need to be customized to speak to the unique needs, incentives, and fears that exist. Begin sharing a version of your account with those you trust to give you constructive criticism. Then iterate.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;“A plausible narrative has immense power. Much more than mere evidence or data.” - Bob Marshall&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Stories are critical for creating systems change and can be told by anyone. If we better understand the elements that go into a story, our messages will find more traction faster. Moving beyond a plausible promise to a full-blown change narrative takes work. However, if your idea is a good one, the results are worth it.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Sep 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/09/10/CreatingCompellingStories/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/09/10/CreatingCompellingStories/</guid>
        
        <category>API governance</category>
        
        <category>organizations</category>
        
        <category>communication</category>
        
        <category>management</category>
        
        
      </item>
    
      <item>
        <title>Changing Organizations With Plausible Promises</title>
        <description>&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/09/linear-state-change.png&quot; alt=&quot;A picture of a linear lifecycle process.&quot; /&gt;
&lt;figcaption class=&quot;slide&quot;&gt;
A picture of a linear lifecycle process accomodating many changes.
&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;It is inevitable that, at some point, a passionate practitioner  wants things to be &lt;em&gt;better&lt;/em&gt;. Whether that is improved API design quality, greater developer autonomy, or increased product focus, these change agents want to nudge their organizations in new directions.&lt;/p&gt;

&lt;p&gt;Knowing where to start, however, can be overwhelming. Feeling, on a deep, fundamental level, that a course of action is right can seem insignificant compared to the size and entrenchment of a complex system.&lt;/p&gt;

&lt;p&gt;Clay Shirky wrote about the term &lt;em&gt;plausible promise&lt;/em&gt; in his book, &lt;a href=&quot;https://www.amazon.com/Here-Comes-Everybody-Organizing-Organizations/dp/0143114948&quot;&gt;Here Comes Everybody&lt;/a&gt;. He defined it as “a message framed in big enough terms to inspire interest, yet achievable enough to inspire confidence.”&lt;/p&gt;

&lt;p&gt;That sounds straightforward on the surface:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Aim too high, and people will dismiss you as a liar, hopelessly naïve, or someone looking to sell something. Examples include “End World Hunger Tomorrow!”, “6-Pack Abs In 6 Days”, or “Generate Beloved APIs From Your Database Schema”. It is hard to rally people to your cause if it seems unobtainable.&lt;/li&gt;
  &lt;li&gt;Aim too low, and nobody will be inspired to take up the cause. There’s either too much specific detail or too little perceived reward to make it attractive. Urging that “Every field name must be written as kabab-case” is not the bold rallying cry you might think it is.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The challenge is to find the Goldilocks middle message: not too pie in the sky, not too in the weeds, but &lt;em&gt;just right&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;John Cutler is a product evangelist and coach. &lt;a href=&quot;https://drive.google.com/file/d/1eQMpc1gfO2wOxBE9UzwZt1k0GZhcXkj8/view?usp=sharing&quot;&gt;In his guide on sustainable change agency&lt;/a&gt;, he defines several ways you’ll know when your plausible promise is working:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;People begin to invite you to meetings to learn more about it&lt;/li&gt;
  &lt;li&gt;Other parts of the organization begin to adopt it&lt;/li&gt;
  &lt;li&gt;You’ll have volunteers helping to grow the idea in new ways&lt;/li&gt;
  &lt;li&gt;Someone will try to take credit for it (a good sign!)&lt;/li&gt;
  &lt;li&gt;People will reach out to thank you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You want change. Identify what about that change will achieve broad acceptance. Articulate how the process for change is not only possible but probable in the current organization. Gaining critical mass is still challenging. If you start with a plausible promise, however, you’ll have taken an essential first step.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Never believe that a few caring people can’t change the world. For, indeed, that’s all who ever have.” - Margaret Mead&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 03 Sep 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/09/03/PlausiblePromises/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/09/03/PlausiblePromises/</guid>
        
        <category>API governance</category>
        
        <category>organizations</category>
        
        <category>communication</category>
        
        <category>clay shirky</category>
        
        <category>john cutler</category>
        
        <category>margaret mead</category>
        
        <category>management</category>
        
        
      </item>
    
      <item>
        <title>'Power-Over' Strategies And How Reporting Can Backfire</title>
        <description>&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/08/fish.png&quot; alt=&quot;A picture of gold and white fishes swimming in water.&quot; /&gt;
&lt;figcaption class=&quot;slide&quot;&gt;
Photo of gold and white fishes by &lt;a href=&quot;https://unsplash.com/@sigmund&quot;&gt;Sigmund&lt;/a&gt; on Unsplash.
&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;A problematic aspect of being a change agent is the lack of proven, frequently discussed techniques for making change happen. For example, in the API space there’s no end to people putting forth “best practices”. But getting teams to agree which practices are best, let alone adopt them? That advice is much harder to come by.&lt;/p&gt;

&lt;p&gt;Several years ago, &lt;a href=&quot;https://matthewreinbold.com/2017/10/03/API-Governance-Blueprint/&quot;&gt;I briefly touched on some approaches I was trying as head of an API Center of Excellence&lt;/a&gt;. In that role, one of my responsibilities was to improve API quality and practice throughout the organization. However, like so many change agents, I didn’t have formal authority over the people who needed to change their practices. With hindsight, I want to share my experience with one influence approach, intriguingly called &lt;em&gt;Kingpins and the Fishbowl&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I read about kingpins and fishbowls in the book &lt;a href=&quot;https://www.amazon.com/Blue-Ocean-Strategy-Uncontested-Competition/dp/1591396190&quot;&gt;Blue Ocean Strategy&lt;/a&gt;. The book is mostly about finding new markets (the “blue ocean”) for product dominance. However, the latter third included practical advice for getting people engaged in something new; something that any change maker deals with.&lt;/p&gt;

&lt;p&gt;The first part of the strategy is to identify the key individuals, or “kingpins”. These people are not just impacted by the change you’re proposing but have the authority to act on it. &lt;a href=&quot;https://matthewreinbold.com/2021/08/19/Three-Systems-Theory-Approaches-To-Governance/&quot;&gt;In a D1 organization&lt;/a&gt;, these could be, but are not limited to, executives with hierarchal power. The high-flyer with the ear of leader (but without formal authority) is also a candidate.&lt;/p&gt;

&lt;p&gt;With the kingpins identified, the next step is creating the fishbowl. The fishbowl is a means by which the kingpins’ performance (or those they are responsible for) is easily compared and contrasted. This review may manifest as an internal dashboard or regular report to executives. Colloquially, people might also know this approach as “naming and shaming”. &lt;a href=&quot;https://apimetrics.io/category/monthly-report/&quot;&gt;APIMetrics does this publicly&lt;/a&gt;. &lt;a href=&quot;https://apimetrics.io/api-outages/&quot;&gt;A lot&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The kingpins and fishbowls technique &lt;em&gt;sounds&lt;/em&gt; plausible: identify those that have authority to make the designed change, put them in a dashboard showing how deficient they are compared to their peers, watch those trend lines change for the positive! As &lt;a href=&quot;https://matthewreinbold.com/2017/10/03/API-Governance-Blueprint/&quot;&gt;I said in my introduction of the topic&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“In my experience, executives didn’t get to where they are without being a tad competitive. Publishing results and easing comparative analysis creates a natural driver for action; each of the leaders want to be number one among their peers.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The approach is not without merit. I did see some success in limited areas. However, looking back, any success was vastly dwarfed by the antagonistic relationships caused by such reporting. To understand why it is crucial to discuss Mary Parker Follet’s concepts of &lt;em&gt;power-over&lt;/em&gt; and &lt;em&gt;power-with&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Mary Parker Follet was a contemporary of Frederick Taylor, the “father” of management theory. But while Taylor believed “the boss knows best”,  Mary’s ideas on power and authority were very different. She defined &lt;strong&gt;power-over&lt;/strong&gt; as a situation where one person has power over
another person. This manifests as dominance and coercion. One side vies for power over another, at best trying to influence the other to concede its
position.&lt;/p&gt;

&lt;p&gt;A kingpin may not oppose the idea of API design improvement. However, design may differ in their priority compared to someone, like the Center of Excellence head, whose sole job is design improvement. Kingpins have no shortage of things vying for their time and energy. Those people create systems for triaging what is worth entertaining &lt;em&gt;and what threatens those limited resources&lt;/em&gt; to remain successful.&lt;/p&gt;

&lt;p&gt;A metric originating from outside their preview, attempting to coerce their priorities list and consume oxygen will not be enthusiastically embraced. While they may not frame it in terms of a “power-over” play, they will resent the attempt all the same and treat the effort with suspicion, if not as a threat. Having sat in those conversations, I can confirm that there are better ways of spending one’s time.&lt;/p&gt;

&lt;p&gt;Put in a similar position today, I would instead attempt what Follet referred to as &lt;em&gt;power-with&lt;/em&gt;. Power-with is collaborative, establishing common ground from which both sides identify and discuss important desires. She called these discussions &lt;em&gt;integration&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://thepowerofcollectivewisdom.com/pdfs/power-over.pdf&quot;&gt;From the power of collective wisdom website discussing Follet&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“She [Follet] understood that true leaders do not command obedience through force or manipulation but rather by giving expression to external realities and the interior aspirations of others.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I talked about the priority mismatch. &lt;em&gt;What I should have done&lt;/em&gt; is better understood the constraints and challenges these leaders faced. Rather than assuming that design quality improvement is job #1, I should learn their actual stack ranking and then integrate how better design could deliver on that. I should have had regular, ongoing conversations, independent of whatever reporting cadence existed, to co-evolve the agendas and make us partners in each others’ success. The metrics needed to be in service of our ends, not their activities being a means to achieving mine.&lt;/p&gt;

&lt;p&gt;The Kingpin in the Fishbowl technique may seem like change is only a dashboard away. However, based on my experience, it is an example of &lt;em&gt;power-over&lt;/em&gt; rather than &lt;em&gt;power-with&lt;/em&gt;. Before attempting to coerce an influential leader’s priorities, carefully consider how that message may antagonize rather than compliment. If possible, pursue a &lt;em&gt;power-with&lt;/em&gt; strategy instead.&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Aug 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/08/27/PowerOverStrategiesAndHowReportingCanBackfire/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/08/27/PowerOverStrategiesAndHowReportingCanBackfire/</guid>
        
        <category>API governance</category>
        
        <category>organizations</category>
        
        <category>Blue Ocean Strategy</category>
        
        <category>metrics</category>
        
        <category>Mary Parker Follet</category>
        
        <category>Frederick Taylor</category>
        
        <category>dashboards</category>
        
        
      </item>
    
      <item>
        <title>Three Systems Theory Approaches to API Governance</title>
        <description>&lt;p&gt;When there is more than one team in an organization, things need to be coordinated. This is especially true when it comes to organizations seeking consistent API design despite have those designs having different authors. Developers, designers, architects, and product managers &lt;em&gt;intuit&lt;/em&gt; that consistent design helps them achieve greater speed and scale. Further, a common approach makes integration more intuitive and can reduce ongoing support costs. But getting teams aligned is a whole separate, more significant challenge when compared to just creating the API.&lt;/p&gt;

&lt;p&gt;The social scientist couple, Fred and Merrelyn Emery, identified two basic patterns for coordinating activities across multiple teams. They named them “&lt;em&gt;first design principle&lt;/em&gt;” and “&lt;em&gt;second design principle&lt;/em&gt;”, or &lt;em&gt;DP1&lt;/em&gt; and &lt;em&gt;DP2&lt;/em&gt;, respectively. Later, they added the concept of the &lt;em&gt;laissez-faire&lt;/em&gt; organization.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/08/dp1-and-dp2.png&quot; alt=&quot;The Emery's depecition of DP1 and DP2 organizations.&quot; /&gt;
&lt;figcaption class=&quot;slide&quot;&gt;The Emerys' depecition of DP1 and DP2 organizations.&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;h2 id=&quot;laissez-fair-governance&quot;&gt;Laissez-fair Governance&lt;/h2&gt;
&lt;p&gt;Laissez-faire is defined as the absence of design principles. Nearly all API ecosystems start as laissez-faire. API design is not a coordinated activity in the beginning but rather a technical means-to-an-end. Laissez-faire is understandable, even desirable at this point in an organization’s journey. An organization’s culture and context define a significant amount of the unique pain points that emerge from inconsistent approaches; these can be difficult to predict. Further, if the API ecosystem does not require further scaling or evolution beyond fragmented, random one-off efforts, a laissez-faire approach to consistency may be appropriate.&lt;/p&gt;

&lt;h2 id=&quot;dp1-governance&quot;&gt;DP1 Governance&lt;/h2&gt;
&lt;p&gt;However, given the necessity of APIs to value delivery in digital transformation efforts, &lt;em&gt;most&lt;/em&gt; businesses &lt;strong&gt;can’t stop with just laissez-faire design approaches&lt;/strong&gt;. In these cases, leadership will establish a DP1 organizational structure; they’ll introduce a manager or supervisor whose explicit job is to coordinate parts to achieve an outcome. In API design, the role of this “API reviewer” or “Center of Excellence” group is to achieve greater consistency for the interfaces produced.&lt;/p&gt;

&lt;p&gt;On the one hand, responsibility for achieving a quality outcome is straightforward. A single, highly-trained individual (or group) could apply to an entire domain. Ownership of the improvement activities is clear; activities like problem assessment, activity creation, oversite, progress reporting, and feedback gathering.&lt;/p&gt;

&lt;p&gt;On the other, DP1 implementations of governance also have notable downsides. For one thing, it can be difficult for any person from a single discipline (architecture, engineering, etc.) to also excel in the  myriad of additional skills this type of oversite requires. These skills include diplomacy, consensus-building, project management, and influencing with minimal formal authority, in addition to having a rich and deep understanding of API nuance. Career progression for these diamonds-in-the-rough people is also unclear.&lt;/p&gt;

&lt;p&gt;For development teams, especially for those used to a laissez-faire design approach, the introduction of this new supervisor or group can be met with hesitation, even suspicion. They may feel a loss of autonomy or lowered morale over what they perceive as a condemnation of their past work. When the relationship is strained and feedback loops poor, the introduction of this design leadership comes across as “ivory tower architecture”.&lt;/p&gt;

&lt;p&gt;It is these DP1 organizational environments that spring to mind when we hear the word “governance”: bureaucratic, dictatorial, and process-heavy hierarchies. These &lt;em&gt;worst-case&lt;/em&gt; scenarios cause individuals to feel robbed of agency without the opportunity of recourse. Not everything is worse-case, of course. The most common case is ineffectual, flaccid governance: governance that is tolerated during the production of a token wins. However, the overall API program/platform cannot deliver on the grand transformation promised at the onset.&lt;/p&gt;

&lt;h2 id=&quot;dp2-governance&quot;&gt;DP2 Governance&lt;/h2&gt;
&lt;p&gt;In a DP2 approach, regulation of design standards (and subsequent quality outcomes) is built into the teams themselves. Individuals are expected to manage the coordination across their boundaries. For example, when designing an error object, Ramesh would consult with his peer on another team, Tara. Tara would have experience creating something similar from her work with Maria and Jose who, likewise, are assigned to other teams. And so on and so forth.&lt;/p&gt;

&lt;p&gt;Those familiar with Brooks’ Law might notice their Spider-sense tingling. Putting the onus to “carry water” on individuals creates significant communication overhead, particularly as the number of people required to coordinate increases.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/08/brooks-law.jpg&quot; alt=&quot;A picture depicting the increasing lines of communication described by Brooks' Law.&quot; /&gt;
&lt;figcaption class=&quot;slide&quot;&gt;A picture depicting the increasing lines of communication described by Brooks' Law.&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Training is one approach to lessen the amount of communication required.   “If everyone just &lt;em&gt;knows&lt;/em&gt; what to do,” the thinking goes, “they’ll have more time to just do it”. With ongoing effort, this approach can work. However, “upskilling” every individual across all the organization’s development teams is also not trivial. A business pursuing this course of action is also likely to appoint someone or some group to oversee this upskilling, which puts us back into the DP1 design camp. The “&lt;a href=&quot;https://rayli.net/posts/information-action-fallacy/&quot;&gt;information action fallacy&lt;/a&gt;” also looms large.&lt;/p&gt;

&lt;p&gt;Changing the environment to make desired outcomes more likely is also an approach. I’ll talk more about this in a future post.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;As the number and complexity of API ecosystems increase, we also need to increase the sophistication of our scaling approaches. Thankfully, a tremendous body of sociotechnical and systems theory over the decades addresses exactly that. As stewards of those ecosystems, our challenge is to step outside of our previous professional callings and engage with this new (to us) wisdom. The sooner we can do that, the sooner we can deliver on the promise of distributed systems.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Aug 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/08/19/Three-Systems-Theory-Approaches-To-Governance/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/08/19/Three-Systems-Theory-Approaches-To-Governance/</guid>
        
        <category>Fred Emery</category>
        
        <category>Merrelyn Emery</category>
        
        <category>API Governance</category>
        
        <category>management</category>
        
        <category>organizations</category>
        
        <category>Brooks' Law</category>
        
        
      </item>
    
      <item>
        <title>One Way to Improve API Guidance</title>
        <description>&lt;p&gt;I’ve seen my share of API Design guidelines. I’ve even contributed to a few. Consistent across those style guides, standards documents, and requirements pages is that we crafted them without the benefit of technical writing or information architecture professionals. Despite having the best of intentions, we left opportunities for conveying our design expectations in better and more useful ways.&lt;/p&gt;

&lt;p&gt;One simple yet powerful addition to any design requirements page is the inclusion of examples &lt;em&gt;formatting in the company’s schema of choice&lt;/em&gt;. These examples can be easily copied/pasted and modified in the editor of choice, removing the ambiguity of personal interpretation or possible typos.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2021/08/on-examples.png&quot; alt=&quot;A picture of a slide from 2018 commenting on the importance of examples from Jasmine Mithani.&quot; /&gt;
&lt;figcaption class=&quot;slide&quot;&gt;
A picture of a slide from 2018 commenting on the importance of examples from &lt;a href=&quot;https://twitter.com/jazzmyth&quot;&gt;Jasmine Mithani&lt;/a&gt;.
&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Let’s take a closer look at what I mean. Here is a hypothetical example of an API rule a business might adopt for interface consistency:&lt;/p&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;Pagination&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;When retrieving a collection of similar items, a caller may desire only to retrieve a subset. The caller may also need the ability to progress through subsets. To paginate through a collection, an API SHOULD provide a pair of query parameters: &lt;strong&gt;limit&lt;/strong&gt; and &lt;strong&gt;offset&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;That is solid guidance and a step toward encouraging APIs that behave more consistently within a domain. However, even within that tiny snippet, several nuanced elements need to be translated correctly to an OpenAPI’s YAML. We also assume that developers are well versed in YAML conventions. In my experience, OpenAPI is a means to an end, not a topic of voluntary study and application. As a result, whoever is writing the API description writes just enough to get their description to validate against the OpenAPI schema and moves on. This &lt;em&gt;minimum viable description&lt;/em&gt; checks a box but falls short of &lt;em&gt;being good enough for integrators&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;paths:
    /users:
        get:
            responses:
                '200':
                description: success
            parameters:
                - $ref: &quot;#components/limit&quot;
                - $ref: &quot;#components/offset&quot;
components:
    schemas:
        limit:
            description: the limit
        offset:
            description: the offset
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Publishing an API describing pagination this way meets the &lt;em&gt;letter&lt;/em&gt; of the rule, it fails to demonstrate the &lt;em&gt;spirit&lt;/em&gt;: &lt;strong&gt;lowering comprehension overhead&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Part of doing the right thing lies with the API designer. But the guidelines, by providing examples that can be copy/pasted, can do a tremendous amount to make that job more manageable. If it was the dev team creating APIs, the benefit is limited. Ten? Now we see some benefit. Dozens of teams across a company? At that scale, the consistency and speed possible by copy/pasting fully realized guidance directly into a design begins to add up.&lt;/p&gt;

&lt;p&gt;So after the description of the pagination guidelines above, include an example that they can easily copy, paste, and customize into their own work, like below. Then continue for each and every other API design feature that would benefit from a more consistent approach. &lt;em&gt;Those writing API descriptions will thank you for it&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;paths:
    /users:
        get:
            responses:
                '200':
                description: success
            parameters:
                - name: offset
                    in: query
                    required: false
                    description: The index of the first item to retrieve. Indices are zero-based
                    schema: 
                        type: integer
                        format: int32
                        minimum: 0
                        default: 0
                - name: limit
                    in: query
                    required: false
                    description: The number of items to retrieve at once. &amp;lt;&amp;lt;insert API-specific default here, including if there is a maximum value&amp;gt;&amp;gt;
                    schema: 
                        type: integer
                        format: int32
                        minimum: 1
                        maximum: 1000
                        default: 20

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 18 Aug 2021 00:00:00 -0500</pubDate>
        <link>https://matthewreinbold.com/2021/08/18/OneWayToImproveAPIGuidance/</link>
        <guid isPermaLink="true">https://matthewreinbold.com/2021/08/18/OneWayToImproveAPIGuidance/</guid>
        
        <category>API governance</category>
        
        <category>OpenAPI</category>
        
        <category>styleguide</category>
        
        <category>documentation</category>
        
        
      </item>
    
  </channel>
</rss>
