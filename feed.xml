<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matthew Reinbold</title>
    <description>This is the website for Matthew Reinbold, the Director for Capital One's   Platform Services Center of Excellence. Much of what appears here dated prior to 2017 was  previously published at VoxPop.co and VoxPopDesign.com. There's also a bit  of legacy detritus from older experiments like mutednoise.com,  miltiantgeek.com, codeaway.org, etc. Yes, I am the adult male that still plays with Lego. You should too.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 13 Nov 2018 15:05:57 -0500</pubDate>
    <lastBuildDate>Tue, 13 Nov 2018 15:05:57 -0500</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Soft and Hard Power in Software Governance</title>
        <description>&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2018/11/lights.png&quot; /&gt;&lt;figcaption&gt;An complex image of power at play across a ceiling.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;I’ve had the privilege (or curse, depending on your predilection) of working in a software governance role for the last several years. What started as a simple API design advisory job has scaled into something that is equal parts technical acumen, developer empathy, business strategy, process psychology, and cultural anthropology. In growing, I’ve had to learn some new things.&lt;/p&gt;

&lt;p&gt;One of those things is the power within systems, and how it is wielded.  I’ve seen top-down, “do as your told”, initiatives flounder, despite the impressive titles of those declaring the mandate. This is because applying linear thinking in blunt ways to dynamic systems often fails.&lt;/p&gt;

&lt;p&gt;But it doesn’t have to be that way. If you have a technical leadership position within your organization, &lt;em&gt;you have more at your disposal than ‘my way or the highway’&lt;/em&gt;. Success in a non-linear system requires an appreciation of different governance power: soft power and hard power.&lt;/p&gt;

&lt;h2 id=&quot;soft-power&quot;&gt;SOFT POWER&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Soft_power&quot;&gt;Soft power&lt;/a&gt; is a political concept developed by Harvard University’s Joseph Nye. Nye defined soft power as the ability to achieve objectives through appeal and attraction, rather than force or coercion. He clarified that it is in opposition to “command power”, or a nation “ordering others to do what it wants.”&lt;/p&gt;

&lt;p&gt;Soft power applies to change agents within a company who may have the &lt;em&gt;responsibility&lt;/em&gt; of achieving technology initiative outcomes, but lack the authority over all the participants. They cannot command people to comply. Instead, they have to rely on a different set of actions: &lt;strong&gt;diplomacy&lt;/strong&gt;, &lt;strong&gt;strategic communication&lt;/strong&gt;, &lt;strong&gt;assistance&lt;/strong&gt;, &lt;strong&gt;negotiation&lt;/strong&gt;, and &lt;strong&gt;community building&lt;/strong&gt;. These actions share an inclusive vision for the future that others embrace without being told.&lt;/p&gt;

&lt;p&gt;Creating standards or processes with a soft power approach may be as simple as stating a new expectation for teams to aspire to in a public forum. Or it might be a mutual agreement between parties on how to move forward on a particular issue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Soft power excels when the situation is new and/or evolving rapidly.&lt;/strong&gt; During this phase of an initiative, it is beneficial to adapt to new information while experience is gathered. Needs, some of which could not have been anticipated ahead of time, can be rapidly responded to. In cases where governance does not know what the final outcome should be, where flexibility and experimentation are most important, soft power should be the preferred approach until a desirable tenable solution is discovered.&lt;/p&gt;

&lt;h2 id=&quot;hard-power&quot;&gt;Hard Power&lt;/h2&gt;
&lt;p&gt;Hard power is the ability to command (or restrict) a person or group to a specific set of behaviors. &lt;em&gt;Usually&lt;/em&gt;, it describes the recognized authority for one individual (or organization) to direct another. But &lt;strong&gt;hard power can also be described as the set of allowances that a software system exposes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Lawrence Lessig, in his books &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_and_Other_Laws_of_Cyberspace&quot;&gt;Code and Other Laws of Cyberspace&lt;/a&gt; (1999), and &lt;a href=&quot;https://en.wikipedia.org/wiki/Code:_Version_2.0&quot;&gt;Code v2&lt;/a&gt; (2006) proposed that software regulates behavior the same way laws do, albeit within the confines of a program. Software commands (or restricts) the user’s actions in a way that coercive, soft power methods do not.&lt;/p&gt;

&lt;p&gt;Soft power may be a suggestion to do something a particular way via a persuasive argument. Hard power, as delivered via software tooling, is the encoded set of things a user is allowed to do. There is less malleability to a specific context. But the outcomes are stable and predictable. Also, because it is delivered via software, hard power can scale more efficiently than soft power.&lt;/p&gt;

&lt;p&gt;A change to hard power, however, &lt;em&gt;means changing code&lt;/em&gt;. Hard power’s capability to react and adapt is only as fast as a team’s deployment cycle. That cycle may include creation of a backlog item, gathering of stories, prioritization in a sprint, coding, functional testing, integration testing, user-acceptance testing, and final deployment. For stable, mature environments that don’t change often, that round-tripping may be an acceptible trade off for hard-power’s benefits.&lt;/p&gt;

&lt;h2 id=&quot;two-recent-examples&quot;&gt;Two Recent Examples&lt;/h2&gt;
&lt;p&gt;Two recent work examples illustrate how I employ soft and hard power to support developers delivering business value.&lt;/p&gt;

&lt;p&gt;In one case, we were tasked with creating a collaboration process on a newly launched technology platform. It was so new, in fact, that what success looked like was tbd. With so many things like developer maturity, throughput, expectations, etc., yet to be determined, we needed to have the flexibility to experiment and change over time. Few things warranted dedicated tooling, or a ‘hard’ power approach, in this situation. Ignore the delivery lag; nothing kills developer moral like telling them to throw out what they just proudly delivered because “the situation is fluid”.&lt;/p&gt;

&lt;p&gt;In the second situation, we recognized an opportunity to express hard power through our lifecycle tooling. The process flow was mature, with clear parameters and desired outcomes. However, we had an immediate problem that stalled a team. In that case, we defined a soft power agreement (“we will proceed with things in this way, and manually track what comes through during this intermediate phase”) until the hard power updated could be applied. It allowed us to solve issues today while we waited for backlog priority could align.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Being a change agent managing a software process across thousands of developers is no simple task. Moving from a simple linear system to a complex ecosystem requires a different set of approaches. I came from a development background; “applying power” talk still makes me  uncomfortable. But, in order to be effective in my role, it is essential understand the nuance and how it can be applied.&lt;/p&gt;

&lt;p&gt;This framework for how I classify approaches has been helpful to me, and hopefully it will be helpful for you, too.&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Nov 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2018/11/13/SoftPowerVHardPower/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/11/13/SoftPowerVHardPower/</guid>
        
        <category>API Governance</category>
        
        <category>soft power</category>
        
        <category>hard power</category>
        
        <category>Joseph Nye</category>
        
        <category>management</category>
        
        <category>Lawrence Lessig</category>
        
        
      </item>
    
      <item>
        <title>Adding SSL to WebAPI.events</title>
        <description>&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2018/08/screenshot.png&quot; /&gt;&lt;figcaption&gt;A screenshot of the previous WebAPI.events desktop experience.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-original-architecture---spreadsheets--3rd-parties--captive-portals-oh-my&quot;&gt;The Original Architecture - Spreadsheets &amp;amp; 3rd Parties &amp;amp; Captive Portals, Oh My!&lt;/h2&gt;
&lt;p&gt;Years ago, in an effort to support the API community, I started a website called “&lt;a href=&quot;https://webapi.events&quot;&gt;WebAPI.events&lt;/a&gt;”. It listed a collection of upcoming, in-person conferences and meetups for those interested in service design.&lt;/p&gt;

&lt;p&gt;I used the original site as an opportunity to play with several ideas converging in my head. The first was using a Google spreadsheet as the data store. Setting up, securing, hosting, and maintaining traditional database software seemed like overkill for a little project like this. A spreadsheet also, significantly, broadens the audience able to follow with a similar approach.&lt;/p&gt;

&lt;p&gt;I also didn’t think a little “tool” site warranted a paid hosting account. Github pages are a simple, free means of hosting “static” sites - those comprised of CSS, HTML, and JavaScript. The “trick” was to get the information from the spreadsheet to Javascript uploaded to Github. For that, I used APISpark, from Restlet. After some configuration, it converted a Google spreadsheet into an API.&lt;/p&gt;

&lt;p&gt;That worked for many years. It never occurred to me, however, that SSL was something that this kind of site needed. Even when free certs became available, from sources like &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;LetsEncyrpt&lt;/a&gt;, it seemed silly. I wasn’t storing sensitive information!&lt;/p&gt;

&lt;p&gt;Besides, not having SSL made WebAPI.events my go-to on “&lt;a href=&quot;https://en.wikipedia.org/wiki/Captive_portal&quot;&gt;captive portals&lt;/a&gt;”. Encrypted sites, like Google or Twitter, usually just timed out if I attempted to open them before agreeing to the captive portal terms. A quick browse attempt to WebAPI.events, however, and the hotel sign-in page appeared immediately.&lt;/p&gt;

&lt;h2 id=&quot;the-need-for-change&quot;&gt;The Need for Change&lt;/h2&gt;
&lt;p&gt;Today, however, there are several reasons to change. The first was the &lt;a href=&quot;https://www.theverge.com/2018/2/8/16991254/chrome-not-secure-marked-http-encryption-ssl&quot;&gt;announcement that Chrome would begin marking ‘http-only’ sites as insecure&lt;/a&gt;. It was a move copied by other browsers, like Firefox. Some, like RSS co-creator David Winer, &lt;a href=&quot;https://www.wired.com/story/google-chrome-https-not-secure-label/&quot;&gt;felt the move was a gross overreach, and that it painted sites that don’t collect info, like webapi.events, with too broad a brush&lt;/a&gt;. However, I was convinced that my site needed SSL &lt;a href=&quot;https://www.troyhunt.com/heres-why-your-static-website-needs-https/&quot;&gt;after watching security expert Troy Hunt demonstrate the importance for static sites&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This happened about the same time that &lt;a href=&quot;https://blog.github.com/2018-05-01-github-pages-custom-domains-https/&quot;&gt;Github announced SSL support for custom domain names&lt;/a&gt;. It was the right thing to do, it was free, and it &lt;em&gt;should&lt;/em&gt; have been easy. With little other excuse, it was time to get to work.&lt;/p&gt;

&lt;h2 id=&quot;the-work&quot;&gt;The Work&lt;/h2&gt;
&lt;p&gt;The first bit was some light rework on the software architecture. Out went the Google Form fronting the spreadsheet, the spreadsheet itself, and RESTlet. I’d just edit JSON data, directly. It would be stored in a file alongside the site code. The GUI, rather than calling an API, would instead load JSON from the same site. That part of the plan went pretty much as intended.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;https://twitter.com/libel_vox/status/1022282428172316672&quot;&gt;live tweeted the challenge of updating the site within the runtime of the latest Mission Impossible movie&lt;/a&gt;. The part that tripped me up was the application of Github’s cert on a custom domain name. &lt;a href=&quot;https://twitter.com/codinghorror/status/1022647165246529536&quot;&gt;I was in good company&lt;/a&gt;. I ended that tweet-storm, and the evening, on a sour note.&lt;/p&gt;

&lt;p&gt;After a few more fruitless attempts, I resorted to &lt;a href=&quot;https://matthewreinbold.com/2017/07/04/SiteUpdate/&quot;&gt;the CloudFoundry solution that had worked so well for my personal site&lt;/a&gt;. A few minutes referring to my notes from last time, some time to let the new d33ts propagate, and &lt;a href=&quot;https://webapi.events/&quot;&gt;webAPI.events&lt;/a&gt; was back!&lt;/p&gt;

&lt;h2 id=&quot;yet-to-do&quot;&gt;Yet to Do&lt;/h2&gt;
&lt;p&gt;At the time I was pulling this piece together, designer Eric Meyer &lt;a href=&quot;https://meyerweb.com/eric/thoughts/2018/08/07/securing-sites-made-them-less-accessible/&quot;&gt;shared a different perspective&lt;/a&gt;. He described how certain parts of the world, like rural Uganda, are dependent on geosynchronous-satellite internet. Because of the slow speeds and rampant packet loss, &lt;em&gt;local caching servers&lt;/em&gt; are a popular thing.&lt;/p&gt;

&lt;p&gt;HTTPS is meant to prevent “man-in-the-middle” manipulations of a page. However, caching content also happens to require a “man-in-the-middle”. The move to SSL everywhere has rendered these important services unusable.&lt;/p&gt;

&lt;p&gt;A possible solution is the usage of “&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;service workers&lt;/a&gt;”. I don’t know much about them, right now, but it seems important in order to enable reasonable access to the widest audience possible.&lt;/p&gt;

&lt;p&gt;As Eric points out, it doesn’t completely solve the problem. There is still the issue of older browsers and operating systems. And it is not just in far flung locations; libraries are another location where those dependent on access are limited to whatever older installations are available. Service workers won’t address that situation.&lt;/p&gt;

&lt;p&gt;The design could also use some twiddling. What is there, now, is serviceable (although the table is a bit small on mobile devices). There are templates available, but the thousands of CSS boilerplate to support many responsive designs is shocking. Given the normalized complexity in everything from cloud deployment pipelines to front-end JavaScript frameworks, I probably shouldn’t be surprised. But damn.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2018/08/screenshot-2.png&quot; /&gt;&lt;figcaption&gt;A screenshot of the new WebAPI.events desktop experience.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So webapi.events is refreshed. It has a simplified workflow, reduced dependencies on 3rd parties, a simplified design, and is only ever served up with SSL.&lt;/p&gt;

&lt;p&gt;And those “captive portals” at airport and hotel wifi spots? Rather than pinging my own stuff, I’ve started using “&lt;a href=&quot;http://neverssl.com/&quot;&gt;NeverSSL.com&lt;/a&gt;”. Simple, easy-to-remember, and perfect for man-in-the-middle hijacking.&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Aug 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2018/08/13/UpdatingWebAPIEvents/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/13/UpdatingWebAPIEvents/</guid>
        
        <category>webapi.events</category>
        
        <category>Google</category>
        
        <category>Github</category>
        
        <category>APISpark</category>
        
        <category>RESTlet</category>
        
        <category>LetsEncrypt</category>
        
        <category>SSL</category>
        
        <category>David Winer</category>
        
        <category>Misson Impossible</category>
        
        <category>CloudFoundry</category>
        
        <category>Eric Meyer</category>
        
        <category>Uganda</category>
        
        <category>service workers</category>
        
        <category>captive portals</category>
        
        <category>responsive design</category>
        
        <category>NeverSSL</category>
        
        
      </item>
    
      <item>
        <title>Rethinking NPS for API Quality</title>
        <description>&lt;p&gt;Previously, &lt;a href=&quot;/2017/10/03/API-Governance-Blueprint/&quot;&gt;I shared my team’s 2017 blueprint for API Governance&lt;/a&gt;. A component was measuring API quality using a “management tool” called &lt;em&gt;Net Promoter Score&lt;/em&gt;, or NPS. While NPS is usually used to quantify customer loyalty, I had hoped to repurpose it. As I explained in my previous work, NPS shortcutted much of the hand-wringing and tedious defense of any methodology we derived ourselves; when measuring “quality of experience”, NPS was already lingua franca among leadership.&lt;/p&gt;

&lt;p&gt;You are probably familiar with NPS, even if you don’t know it by name. Ever been asked to rank your experience between a 0 and 10? Most likely your answer is being compiled into an NPS score.&lt;/p&gt;

&lt;p&gt;After a year of experimenting with NPS, however, we’ve moved on. This is a update on the why, what we’ve done in the first half of 2018, and where I see continuing challenges in measuring API quality.&lt;/p&gt;

&lt;p&gt;There are many repudiations of NPS. However, none encapsulated as many of the problems we were experiencing as Jared Spool’s “&lt;a href=&quot;https://articles.uie.com/net-promoter-score-considered-harmful-and-what-ux-professionals-can-do-about-it/&quot;&gt;Net Promoter Score Considered Harmful (and What UX Professionals Can Do About It)&lt;/a&gt;”.&lt;/p&gt;

&lt;h2 id=&quot;problems-with-nps&quot;&gt;Problems with NPS&lt;/h2&gt;
&lt;h3 id=&quot;it-skews-negative&quot;&gt;It Skews Negative&lt;/h3&gt;
&lt;p&gt;As Jared points out, NPS is &lt;strong&gt;not&lt;/strong&gt; a mean/average of all the scores collected. Rather, values “0-6” are considered &lt;em&gt;detractors&lt;/em&gt;, or people who are unlikely to recommend something to others. Based on how my team used it, this was whether my API team would recommend the API design for emulation by others within the org. A “7” or “8” is passable; neither so offensive that we have a clear call to action, but not the best of what we hope to see. Anything rated “9” or “10” we shout about from the roof tops.&lt;/p&gt;

&lt;p&gt;Framing scores int his way doesn’t match with people’s expectations. A ‘middle of the pack’ rating of 5 &lt;em&gt;seems&lt;/em&gt; as though it should be neutral, neither good or bad, halfway between either pole. Yet, when computing NPS (the % of promoter scores minus the % of detractors), this value negatively impacts the rating.&lt;/p&gt;

&lt;p&gt;It became a training issue for reviewers. And if it was non-obvious for the people doing the scoring, it certainly was a challenge for the development teams reviewed (who are different than executive leadership).&lt;/p&gt;

&lt;p&gt;When meeting with busy folks outside your normal sphere of influence, you only get a few, fleeting minutes to hook them with “an ask”. Arguing over methodology minutia was &lt;em&gt;not&lt;/em&gt; a good use of precious time.&lt;/p&gt;

&lt;h3 id=&quot;quality-improvement-on-individual-apis-or-otherwise-is-washed-out&quot;&gt;Quality Improvement, on Individual APIs or Otherwise, is Washed Out&lt;/h3&gt;
&lt;p&gt;Let’s suppose a team has done the bare minimum for an API and, for various reasons, it exhibits intention that is neither &lt;a href=&quot;/2016/06/02/ConsistencyAndCohesion/&quot;&gt;consistent or cohesive with what has come before&lt;/a&gt;. My team would give this design a low score in an effort to incentivize improvement. Let’s say that score is “1” (a detractor). There’s no promoters, so the NPS results in a value of &lt;strong&gt;-100&lt;/strong&gt;, or the worst score a design can get.&lt;/p&gt;

&lt;p&gt;Shocked by “-100”, the group sets out to improve the design: perhaps they improve the documentation, address some of the unintuitive RPC patterns, etc. The prioritize this work against a backlog of competing features, resubmit for review, the reviewer acknowledges their effort by scoring them a “6” and…&lt;/p&gt;

&lt;p&gt;…&lt;em&gt;the team still gets -100 NPS&lt;/em&gt;. The team has made huge strides; their design is now above average! Yet, in the number reported to leadership, that effort was invisible. Imagine how demoralizing that would be on the part of the team, and how unlikely they’ll prioritize effort on new work in the future.&lt;/p&gt;

&lt;p&gt;There’s also a scenario, as Jared points out, where a team improves a design previously rated “8”. That “neutral” score results in an NPS of 0. But, with a bit of polish, the design is re-reviewed at “9”. The result is an NPS of 100: &lt;strong&gt;a perfect score&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;What is more valuable for future integrations? A team that improves a design from “1” to “6”, or a team that moves from “8” to a “9”? With NPS, the former is ignored. In the latter, it is overemphasized.&lt;/p&gt;

&lt;p&gt;The purpose of that my team produces these metrics is to incentivize positive behavior. If the correct behavior is happening, but it isn’t reflected in the metrics, then we need to change things.&lt;/p&gt;

&lt;h2 id=&quot;what-were-doing-now&quot;&gt;What We’re Doing Now&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2018/07/sample-chart.png&quot; /&gt;
&lt;figcaption class=&quot;slide&quot;&gt;
A sample chart of what we're currently reporting out, grouped by business division.
&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Since moving away from NPS, we’ve gone to a much more straightforward average of reviewer scores. While each of these have a high degree of nuance, at a high level APIs are scored on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Standards Adherence&lt;/li&gt;
  &lt;li&gt;Completeness of the Documentation&lt;/li&gt;
  &lt;li&gt;Consistency and Cohesion with Previously Published Work&lt;/li&gt;
  &lt;li&gt;Viability to Exist as an API Product&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The average score remains useful for leadership to know where they are in their API design maturity. But what is much more &lt;em&gt;actionable&lt;/em&gt; for teams is directed feedback. A team that learns that their design averaged a score of “6” could cast about for changes to make on their next version. Or they could address a detailed list of concerns.&lt;/p&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What’s Next&lt;/h2&gt;

&lt;h3 id=&quot;stop-converting-noise-into-science&quot;&gt;Stop Converting Noise into Science&lt;/h3&gt;
&lt;p&gt;After moving away from computing NPS, we still had a considerable amount of scoring activity that was useful. But it was based on the 11-point (0-10) scale used by NPS. So, when we continued with more straightforward averages, we maintained the previous scale so that we could blend the old and new scores.&lt;/p&gt;

&lt;p&gt;Unfortunately, I’d be hard pressed to define the specific difference between an API design where one is rated a “4” and another is rated “5” on an 11-point scale. The distinction isn’t clear and leads to situations where one person’s “7” may be another person’s “5”.&lt;/p&gt;

&lt;p&gt;A 3-point scale is very straightforward: if an API design is “bad”, give it a “1”, just ok APIs get a “2”, and awesome API designs get a “3”. However, that doesn’t leave a whole lot of nuance. Something akin to a 5-point scale seems to be a better fit. However, retrofitting the past year of scoring activity, &lt;a href=&quot;https://www.linkedin.com/pulse/amazons-rating-system-broken-might-your-fault-samuel-carter/&quot;&gt;along with avoiding polarization tendencies&lt;/a&gt; remains a challenge.&lt;/p&gt;

&lt;h3 id=&quot;conflicts-of-interest-when-judge-jury-and-executioner&quot;&gt;Conflicts of Interest when Judge, Jury, and Executioner&lt;/h3&gt;
&lt;p&gt;Presenting a picture of where leadership is at in their journey is one thing. We create the expectations and measure how well we meet those expectations. A conflict of interest arises when leadership, subsequently, sets specific scoring targets that they expect my reviewing team, working with software development teams, to deliver.&lt;/p&gt;

&lt;p&gt;That could be a problem. The USDA food inspector isn’t required to show improvement in the produce they’re reviewing. The engineers that inspect bridges aren’t expected to have their defects detected trend downward overtime. Putting those who review a thing with a well intentioned, but misplaced, incentive can result in &lt;a href=&quot;https://money.cnn.com/2016/09/26/investing/wells-fargo-fake-accounts-before-2011/index.html&quot;&gt;some troubling outcomes&lt;/a&gt;. There’s tremendous pressure to pull a punch here, or turn a blind eye there.&lt;/p&gt;

&lt;p&gt;The team and I need to define a better way forward here, with clear accountability and laser focus on driving the correct outcomes.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Ultimately, this is part of a healthy process. We tried something, learned a ton in the process, and are iterating to get to something better. We have a ways to go. But I think it’s a sign of maturity to be able to take on new information and evolve to something better because of it.&lt;/p&gt;

&lt;p&gt;Do you have an API quality metrics story? Are you wrestling with accountability and socialization of organizational improvements? Shoot me a line. I’d love to compare notes.&lt;/p&gt;

</description>
        <pubDate>Tue, 10 Jul 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2018/07/10/Update-on-NPS/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/10/Update-on-NPS/</guid>
        
        <category>REST API</category>
        
        <category>Capital One</category>
        
        <category>API Governance</category>
        
        <category>metrics</category>
        
        <category>NPS</category>
        
        
      </item>
    
      <item>
        <title>Evolving APIs without Breaking &amp;#x2709;</title>
        <description>&lt;p&gt;The lead story in this edition of the newsletter is Phil Sturgeon's piece on how to evolve an API design without breaking. &lt;em&gt;Usually&lt;/em&gt;, people resort to versioning in these cases. Phil does an excellent job of illustrating an alternative way.&lt;/p&gt;

&lt;p&gt;There's also a bit from Matt McLarty on the future of microservices, and more from Sarah Elson on testing. Good, fundamental stuff on tap.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-05-09&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-05-09&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 May 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/05/09/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/05/09/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Phil Sturgeon</category>
        
        <category>microservices</category>
        
        <category>Matt McLarty</category>
        
        <category>Sarah Elson</category>
        
        <category>testing</category>
        
        <category>API City Conference</category>
        
        <category>Gartner</category>
        
        <category>Kai Todter</category>
        
        <category>HAL</category>
        
        <category>Facebook</category>
        
        <category>Google</category>
        
        <category>Sam Newman</category>
        
        <category>Erik Wilde</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>microxchng 2018 Recap &amp;#x2709;</title>
        <description>&lt;p&gt;It's a celebration of all things microservice related in this edition of the REST API Notes. The microxchng conference, this year in Berlin, is one of the best out there. And thanks to video being posted to YouTube, all technologists can enjoy! I highlight some of my favorite pieces, through in a counter argument here and there to keep it spicy, and share a couple of notable milestones.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-05-01&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-05-01&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 01 May 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/05/01/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/05/01/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>microservices</category>
        
        <category>Michael Plod</category>
        
        <category>Zhamak Dehghani</category>
        
        <category>Stefan Tilkov</category>
        
        <category>Tareq Abedrabbo</category>
        
        <category>Eberhard Wolff</category>
        
        <category>microxchng</category>
        
        <category>API Transformer</category>
        
        <category>IFTTT</category>
        
        <category>Salesforce</category>
        
        <category>YouTube</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Contrasting API Maturity Models &amp;#x2709;</title>
        <description>&lt;p&gt;For years, the Richardson Maturity Model has been the standard by which an API design has been gauged. Awhile later, Mike Amundsen proposed his own Maturity Model. In this edition of the REST API Notes newsletter, Zdenek Nemec summarizes and contrasts the two models. It's a thoughtful decomposition that leads to additional insights.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-19&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-19&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/04/11/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/04/11/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Zdenek Nemec</category>
        
        <category>Richardson Maturity Model</category>
        
        <category>Amundsen Maturity Model</category>
        
        <category>Jose Montoya</category>
        
        <category>Kristopher Sandoval</category>
        
        <category>auth0</category>
        
        <category>microservices</category>
        
        <category>Fran Mendez</category>
        
        <category>Kafka</category>
        
        <category>RabbitMQ</category>
        
        <category>Red Hat</category>
        
        <category>Istio</category>
        
        <category>service mesh</category>
        
        <category>Christian Posta</category>
        
        <category>Burr Sutter</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Facebook, Twitter and Understanding API Business Models &amp;#x2709;</title>
        <description>&lt;p&gt;In light of recent scandal, Facebook (along with its child company, Instagram) has clamped down on usage of its API. The move resulted in numerous parties questioning whether Facebook is even in the platform business. In this edition of the REST API Notes, I give the cliff note version of SaaS v PaaS v IaaS:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Software-as-a-service&lt;/strong&gt; (SaaS) is where the software is already built. Think the original incarnation of Salesforce, where it was an entire customer relationship management (or CRM) system that could be integrated with. You &lt;em&gt;integrate with&lt;/em&gt; a SaaS.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Platform-as-a-service&lt;/strong&gt; (PaaS), where all of the pieces to build software are readily accessible but the integrator brings their own logic. Twilio or Sendgrid, in my mental model, are here. You &lt;em&gt;program for&lt;/em&gt; a PaaS.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Infrastructure-as-a-service&lt;/strong&gt; (IaaS) is where virtual servers and related raw-compute services are sold. AWS, Azure, etc are here. You &lt;em&gt;deploy to&lt;/em&gt; an IaaS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Where does Facebook sit? And was a misalignment between its geeky ambition and what made it money the reason they're in the trouble they're in? That in the latest newsletter, and more.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-11&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-11&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/04/11/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/04/11/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Facebook</category>
        
        <category>Zynga</category>
        
        <category>Cambridge-Analytica</category>
        
        <category>Instagram</category>
        
        <category>AWS</category>
        
        <category>Twilio</category>
        
        <category>Sendgrid</category>
        
        <category>Azure</category>
        
        <category>ESPN</category>
        
        <category>Twitter</category>
        
        <category>Talon</category>
        
        <category>Tweetbot</category>
        
        <category>Tweetings</category>
        
        <category>Twitterrific</category>
        
        <category>Oracle</category>
        
        <category>Google</category>
        
        <category>Talend</category>
        
        <category>OpenAPI</category>
        
        <category>Restlet</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Google, Oracle, and Copyrightable APIs &amp;#x2709;</title>
        <description>&lt;p&gt;What does the prospect of a $9 billion payout get you? Apparently, one long legal challenge that, despite various twists and turns, has come out in Oracle's favor. I've been dubious that an API design could be copyrighted. But I'm also not a lawyer. A federal court has ruled the Google has done damage to Oracle by copying the Java interface. It is a ridiculous claim; I would argue that Java is as popular as ever largely &lt;em&gt;because of&lt;/em&gt; Google's Android operating system. But here we are.&lt;/p&gt;

&lt;p&gt;But that isn't all. I also cover an interesting hypermedia manifesto and four common misconceptions of REST. There's also a whirlwind recap of API fallout after the Facebook fiasco.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-03&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-03&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/04/03/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/04/03/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Google</category>
        
        <category>Oracle</category>
        
        <category>Java</category>
        
        <category>Peter Williams</category>
        
        <category>hypermedia</category>
        
        <category>Asbjorn Ulsberg</category>
        
        <category>Facebook</category>
        
        <category>Instagram</category>
        
        <category>Cloud Elements</category>
        
        <category>microservices</category>
        
        <category>Aadhaar</category>
        
        <category>Keith Casey</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Facebook, Mulesoft Acquired, and More &amp;#x2709;</title>
        <description>&lt;p&gt;This edition of the REST API Notes is double stuffed. For starters, I've got loads to say about Facebook (I try to keep it more on the technologist side here, but &lt;a href=&quot;/2018/03/26/Facebook/&quot;&gt;I have additional, policy-related, thoughts too&lt;/a&gt;). Next up, we need to spend some time talking about Salesforce's &lt;strong&gt;$6.5 billion&lt;/strong&gt; bid for Mulesoft. Oh, and there's some top shelf microservice thought leadership from the recently concluded microXchg conference.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-03-27-facebook-salesforce-and-more&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-03-27-facebook-salesforce-and-more&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Mar 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/03/27/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/03/27/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Facebook</category>
        
        <category>Salesforce</category>
        
        <category>Mulesoft</category>
        
        <category>microXchg</category>
        
        <category>Graph API</category>
        
        <category>Kin Lane</category>
        
        <category>OAuth</category>
        
        <category>Zeynep Tufekci</category>
        
        <category>PII</category>
        
        <category>Equifax</category>
        
        <category>GDPR</category>
        
        <category>Stefan Tilkov</category>
        
        <category>Uwe Friedrichsen</category>
        
        <category>RapidAPI</category>
        
        <category>Andreessen Horowitz</category>
        
        <category>A16Z</category>
        
        <category>Mashape</category>
        
        <category>Kong</category>
        
        <category>Algorithmia</category>
        
        <category>Apigee</category>
        
        <category>Runscope</category>
        
        <category>microservices</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Facebook, Regulation, and Who Controls the Kitchen Sink</title>
        <description>&lt;p&gt;In the wake of Cambridge-Analytica, Facebook seems to be taking the wrong lessons from the incident (or, if I’m cynical, they’re skewing in a direction that cements their market dominance). They are correct that the loss of trust is so much bigger than whatever terms of service Cambridge Analytica violated. However, the stated conclusion that there is a binary relationship between data portability and privacy - that either everything must be shared or Facebook controls everything - is &lt;em&gt;wrong&lt;/em&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2018/03/facebook-apology.jpg&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Last week, concerns over Facebook’s data collection practices reached an all-time fever pitch. I had intended on sharing my thoughts, along with a handful of recommended takeaways for API providers, as part of my &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/archive&quot;&gt;REST API Notes&lt;/a&gt;. However, the longer I compiled breaking news, the longer the piece became. Eventually, it seemed warranted to break Facebook off into its own dedicated post.&lt;/p&gt;

&lt;p&gt;I’ve tried to be thorough, but “uncritical” set sail awhile ago. I’m biased. People, like techno-sociologist Zeynep Tufekci, raised the alarm years ago, when meaningful action could have been taken.  &lt;a href=&quot;/2016/08/01/CodifiedCulturalBias/&quot;&gt;I left Facebook around the same time over concerns on the power uber data aggregators wield&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Despite those protestations, Facebook’s practices continued. It doesn’t appear that the internal conversations ever switched from “can we?” to “should we?” And now the mob, embittered and frustrated by the cultural malaise of the moment, are coming with torches and regulatory pitchforks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About. Goddamn. Time.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;Mid-March, The New York Times reported that Cambridge Analytica &lt;a href=&quot;https://www.nytimes.com/2018/03/17/us/politics/cambridge-analytica-trump-campaign.html&quot;&gt;improperly acquired the private data&lt;/a&gt; of approximately 50 million Facebook users. It then, subsequently, used the psychological profiles it created with the data to target voters on behalf of the Trump campaign during the 2016 presidential election. The Obama campaign, in 2012, &lt;a href=&quot;https://www.youtube.com/watch?time_continue=1189&amp;amp;v=LGiiQUMaShw&quot;&gt;also ingested Facebook relationship data&lt;/a&gt;. However, while the Obama campaign was transparent that people were giving their information (and their friends’ information) to the cause of re-electing Obama, the Trump campaign used data culled from a personality quiz app.&lt;/p&gt;

&lt;p&gt;This app used the 1.0 version of the Facebook’s Graph API. That version launched in April, 2010 and allowed developers to “not only see the social connection between people, &lt;a href=&quot;https://techcrunch.com/2010/04/21/zuckerbergs-buildin-web-default-social/&quot;&gt;but see and create the connections people have with their interests - things, places, brands, and other sites&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;Very &lt;em&gt;little&lt;/em&gt; information is needed before profound insights can be inferred about a person. &lt;a href=&quot;https://web.archive.org/web/20090328103238/http://privacy.cs.cmu.edu/dataprivacy/HIPAA/HIPAAcomments.html&quot;&gt;A Carnegie Mellon study has shown&lt;/a&gt;, 87% of Americans can be positively identified using only a 5-digit postal code, gender, and date of birth. Full name, postal code, and date of birth equate to voter rolls, which themselves are sold by many states. Using nothing but likes, &lt;a href=&quot;http://www.pnas.org/content/early/2013/03/06/1218772110&quot;&gt;researchers Michal Kosinski, David Stillwell, and Thore Graepel have successfully shown they can predict a wide range of sensitive personal attributes&lt;/a&gt; including “sexual orientation, ethnicity, religious and political views, personality traits, intelligence, happiness, use of addictive substances, parental separation, age, and gender”.&lt;/p&gt;

&lt;p&gt;Further, version 1.0 of the Graph API didn’t just make information about a specific user available; it allowed “extended permissions”. This feature allowed approved apps to request a range of users’ &lt;em&gt;friends&lt;/em&gt;, along with their information. This additional information &lt;em&gt;did not require the consent of those friends before it was shared&lt;/em&gt;. In addition to Personally Identifiable Information (or PII), this friend information included education, groups, hometown, interests, location, relationships, religion, work history, etc. Having understanding of information flow is powerful; according to one study, &lt;a href=&quot;https://blog.acolyer.org/2018/03/26/information-flow-reveals-prediction-limits-in-online-social-activity/&quot;&gt;‘95% of the potential predictive accuracy attainable for an individual is available within the social ties of that individual only, without requiring the individual’s data’&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A University of Cambridge professor, Aleksadr Kogan, created an app called &lt;em&gt;thisisyourdigitallife&lt;/em&gt;. Built using Facebook’s Graph API, he seeded the initial userbase with people paid through Amazon’s “Mechanical Turk”. Subsequently, &lt;a href=&quot;https://www.nytimes.com/2018/03/19/opinion/facebook-cambridge-analytica.html&quot;&gt;around 270,000 people were paid between $1 and $2 to download and use the personality quiz app&lt;/a&gt;. Through the use of ‘extended permissions’ the initial 270,000 users resulted in 50 million populated profiles; profiles containing the names, dates of birth, employment history, likes, and more. Aleksadr then gave the information he collected to Cambridge Analytica. &lt;em&gt;Technically&lt;/em&gt;, only the last step violated Facebook’s rules, which prohibit selling or giving away data collected by a third-party app.&lt;/p&gt;

&lt;p&gt;Graph 1.0 was deprecated on April 2014 (and access ended entirely in 2015). The second version of the Graph API, while providing information for the conscenting user, &lt;a href=&quot;https://stackoverflow.com/questions/23417356/facebook-graph-api-v2-0-me-friends-returns-empty-or-only-friends-who-also-u&quot;&gt;no longer has extended permissions&lt;/a&gt;. However, the data collected by external entities during this time cannot be expunged; revoking access does nothing to the apps that might have had access and saved themselves a copy. The data is out there, on who-knows-how-many private servers, with the potential to be purchased, aggregated with other datasets, and weaponized for future scenarios.&lt;/p&gt;

&lt;p&gt;In fact, &lt;a href=&quot;https://www.theatlantic.com/technology/archive/2018/03/my-cow-game-extracted-your-facebook-data/556214/&quot;&gt;as the author of the Facebook game ‘Cow Clicker’ stated&lt;/a&gt;, “all the publicity around Facebook’s Cambridge Analytica crisis might be sending lots of old app developers, like me, back to old code and dusty databases, wondering what they’ve even got stored and what it might yet be worth”.&lt;/p&gt;

&lt;p&gt;Furthermore, the abuses didn’t stop when Graph 1.0 was fully shutdown in 2015. Other Facebook products, like Instagram’s API, &lt;a href=&quot;https://business.instagram.com/blog/new-instagram-api-features&quot;&gt;still exhibit similar behavior&lt;/a&gt;. In March, 2016, &lt;a href=&quot;https://promarket.org/roger-mcnamee-think-can-make-legitimate-case-facebook-become-parasitic/&quot;&gt;Facebook expelled a group that was using its API to scrape data about people who expressed interest in Black Lives Matter&lt;/a&gt;. The group had been selling the data to police departments. At the end of the same year, &lt;a href=&quot;https://www.propublica.org/article/hud-has-serious-concerns-about-facebooks-ethnic-targeting&quot;&gt;the Department of Housing and Urban Development launched an investigation following concerns that Facebook’s advertising tools allow real estate advertisers to discriminate users according to race&lt;/a&gt;. Facebook &lt;a href=&quot;http://time.com/5215274/facebook-messenger-android-call-text-message-data/&quot;&gt;has also admitted to collecting call and text message history of users who own Android phones&lt;/a&gt; (while users were asked if they wanted to import their phone contacts, it was not obvious to many users that they were agreeing to have their cell phone activity recorded).&lt;/p&gt;

&lt;p&gt;Mark Zuckerberg &lt;a href=&quot;https://www.techdirt.com/articles/20180321/17312239474/mark-zuckerberg-finally-speaks-about-cambridge-analytica-it-wont-be-enough.shtml&quot;&gt;responded last Wednesday afternoon, outlining reactive steps to the situation&lt;/a&gt;: Facebook would &lt;em&gt;investigate old apps that used v1.0&lt;/em&gt;, &lt;em&gt;further restrict access to data&lt;/em&gt;, and &lt;em&gt;give more transparency and control to end users&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Meanwhile, Facebook and Cambridge Analytica have &lt;a href=&quot;https://www.techdirt.com/articles/20180318/00111439443/both-facebook-cambridge-analytica-threatened-to-sue-journalists-over-stories-cas-use-facebook-data.shtml&quot;&gt;threatened to sue&lt;/a&gt; the journalists that broke the original story. This seems, primarily, over the erroneous use of the word “breach” in the course of describing events; if determined to be a data breach (which this wasn’t), the company could face fines.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Frustratingly, Facebook seems to be taking the wrong lessons from the incident (or, if I’m cynical, they’re skewing in a direction that cements their market dominance). They are correct that the loss of trust is so much bigger than whatever terms of service Cambridge Analytica violated. However, the stated conclusion that there is a binary relationship between data portability and privacy - that either everything must be shared or Facebook controls everything - is &lt;em&gt;wrong&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.techdirt.com/articles/20180321/17312239474/mark-zuckerberg-finally-speaks-about-cambridge-analytica-it-wont-be-enough.shtml&quot;&gt;Techdirt summarized the round of media interviews that Mark Zuckerberg did, where he said&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I was maybe too idealistic on the side of data portability, that it would create more good experiences — and it created some — but I think what the clear feedback from our community was that people value privacy a lot more.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Later, he bemoans having to make these kinds of tradeoffs:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I guess I have to, because of [where we are] now, but I’d rather not.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If consumers &lt;em&gt;had&lt;/em&gt; control, it would take Mark out of the leadership role that he is, apparently, uncomfortable playing.  Why &lt;em&gt;can’t&lt;/em&gt; someone easily be able to bulk-delete “likes” older than a year? Why is it necessary for Facebook to retain work history older than the last employer? Sexual orientation, race, and religious affiliation can get someone killed - so why can’t people indicate that these should never be stored, or even &lt;em&gt;inferred&lt;/em&gt; - as part of their profile?&lt;/p&gt;

&lt;p&gt;The most valuable part of Facebook, for an individual, is not the status updates, or the images uploaded - it is the network of connections they’ve built. This is why so many apps, unable to get the social graph from Facebook, resort to the kludge of the “access your contacts” email workaround. If the individual chose, why couldn’t they take those relationships (sans ‘extended permissions’ data) with them somewhere else?&lt;/p&gt;

&lt;p&gt;Rather than allow apps to hoover up the kind of information useful for psyops, why not allow developers to create 3rd party tools for permissions configuration, &lt;a href=&quot;https://www.eff.org/deeplinks/2018/03/why-we-didnt-make-fix-my-facebook-privacy-settings-tool&quot;&gt;the kind Cory Doctorow wrote about&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Unfortunately, because there is little market incentive for Facebook to do so. Till now, the profitable thing has not aligned with the right thing. As Doc Searls has written, &lt;a href=&quot;http://blogs.harvard.edu/doc/2018/03/23/nothing/&quot;&gt;this is a problem not just for Facebook, but for an entire online publishing industry dependent on building advertising panopticons for revenue growth&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Regulation, above and beyond what currently exists, is coming. It &lt;em&gt;could&lt;/em&gt; make a difference. However, ideas currently swirling entrench Facebook as the market leader, with little likelihood of alternatives arising. An example is the European ‘&lt;a href=&quot;https://pagefair.com/blog/2017/gdpr_risk_to_the_duopoly/&quot;&gt;General Data Protection Regulation&lt;/a&gt;’ (GDPR). It goes into effect May, 2018. Some have hailed it as progress toward defining when user consent is necessary. It also has provisions for data portability. However, &lt;a href=&quot;https://medium.com/mydata/gdpr-data-portability-is-a-false-promise-af460d35a629&quot;&gt;there are already workarounds devised, with the social graph considered a “legitimate interest” of the social network&lt;/a&gt;. As a ‘legitimate interest’ of the business, it is not privy to export.&lt;/p&gt;

&lt;p&gt;As Techdirt summarized:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“Solving” the problem isn’t going to be solving the problem for real – and it’s just going to end up giving Facebook greater power over our data. That’s an unfortunate result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What we need is thoughtful, not knee-jerk, regulation. We need consumer-friendly policies that promote the principles of the open web and eschew monopolies. We need to treat personal data with the kind of care and responsibility that we do with powerful, and potentially dangerous, things in the real world. And we need to look for answers outside of Facebook, because there’s few incentives to drive the necessary change from within.&lt;/p&gt;

&lt;div style=&quot;max-width:854px&quot;&gt;&lt;div style=&quot;position:relative;height:0;padding-bottom:56.25%&quot;&gt;&lt;iframe src=&quot;https://embed.ted.com/talks/zeynep_tufekci_we_re_building_a_dystopia_just_to_make_people_click_on_ads&quot; width=&quot;854&quot; height=&quot;480&quot; style=&quot;position:absolute;left:0;top:0;width:100%;height:100%&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 26 Mar 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2018/03/26/Facebook/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/03/26/Facebook/</guid>
        
        <category>Facebook</category>
        
        <category>Zeynep Tufekci</category>
        
        <category>regulation</category>
        
        <category>governance</category>
        
        <category>Trump</category>
        
        <category>Obama</category>
        
        <category>Graph API</category>
        
        <category>Carnegie Mellon</category>
        
        <category>Michal Kosinski</category>
        
        <category>David Stillwell</category>
        
        <category>Thore Graepel</category>
        
        <category>Aleksadr Kogan</category>
        
        <category>Cambridge Analytica</category>
        
        <category>Mechanical Turk</category>
        
        <category>Instagram</category>
        
        <category>Mark Zuckerberg</category>
        
        <category>open web</category>
        
        <category>Cory Doctorow</category>
        
        <category>Doc Searls</category>
        
        <category>GDPR</category>
        
        
      </item>
    
  </channel>
</rss>
