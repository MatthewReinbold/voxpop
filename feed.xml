<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matthew Reinbold</title>
    <description>This is the website for Matthew Reinbold, the Director for Capital One's   Platform Services Center of Excellence. Much of what appears here dated prior to 2017 was  previously published at VoxPop.co and VoxPopDesign.com. There's also a bit  of legacy detritus from older experiments like mutednoise.com,  miltiantgeek.com, codeaway.org, etc. Yes, I am the adult male that still plays with Lego. You should too.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 07 Jul 2018 15:26:08 -0400</pubDate>
    <lastBuildDate>Sat, 07 Jul 2018 15:26:08 -0400</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Evolving APIs without Breaking &amp;#x2709;</title>
        <description>&lt;p&gt;The lead story in this edition of the newsletter is Phil Sturgeon's piece on how to evolve an API design without breaking. &lt;em&gt;Usually&lt;/em&gt;, people resort to versioning in these cases. Phil does an excellent job of illustrating an alternative way.&lt;/p&gt;

&lt;p&gt;There's also a bit from Matt McLarty on the future of microservices, and more from Sarah Elson on testing. Good, fundamental stuff on tap.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-05-09&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-05-09&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 May 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/05/09/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/05/09/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Phil Sturgeon</category>
        
        <category>microservices</category>
        
        <category>Matt McLarty</category>
        
        <category>Sarah Elson</category>
        
        <category>testing</category>
        
        <category>API City Conference</category>
        
        <category>Gartner</category>
        
        <category>Kai Todter</category>
        
        <category>HAL</category>
        
        <category>Facebook</category>
        
        <category>Google</category>
        
        <category>Sam Newman</category>
        
        <category>Erik Wilde</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>microxchng 2018 Recap &amp;#x2709;</title>
        <description>&lt;p&gt;It's a celebration of all things microservice related in this edition of the REST API Notes. The microxchng conference, this year in Berlin, is one of the best out there. And thanks to video being posted to YouTube, all technologists can enjoy! I highlight some of my favorite pieces, through in a counter argument here and there to keep it spicy, and share a couple of notable milestones.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-05-01&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-05-01&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 01 May 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/05/01/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/05/01/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>microservices</category>
        
        <category>Michael Plod</category>
        
        <category>Zhamak Dehghani</category>
        
        <category>Stefan Tilkov</category>
        
        <category>Tareq Abedrabbo</category>
        
        <category>Eberhard Wolff</category>
        
        <category>microxchng</category>
        
        <category>API Transformer</category>
        
        <category>IFTTT</category>
        
        <category>Salesforce</category>
        
        <category>YouTube</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Contrasting API Maturity Models &amp;#x2709;</title>
        <description>&lt;p&gt;For years, the Richardson Maturity Model has been the standard by which an API design has been gauged. Awhile later, Mike Amundsen proposed his own Maturity Model. In this edition of the REST API Notes newsletter, Zdenek Nemec summarizes and contrasts the two models. It's a thoughtful decomposition that leads to additional insights.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-19&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-19&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/04/11/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/04/11/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Zdenek Nemec</category>
        
        <category>Richardson Maturity Model</category>
        
        <category>Amundsen Maturity Model</category>
        
        <category>Jose Montoya</category>
        
        <category>Kristopher Sandoval</category>
        
        <category>auth0</category>
        
        <category>microservices</category>
        
        <category>Fran Mendez</category>
        
        <category>Kafka</category>
        
        <category>RabbitMQ</category>
        
        <category>Red Hat</category>
        
        <category>Istio</category>
        
        <category>service mesh</category>
        
        <category>Christian Posta</category>
        
        <category>Burr Sutter</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Facebook, Twitter and Understanding API Business Models &amp;#x2709;</title>
        <description>&lt;p&gt;In light of recent scandal, Facebook (along with its child company, Instagram) has clamped down on usage of its API. The move resulted in numerous parties questioning whether Facebook is even in the platform business. In this edition of the REST API Notes, I give the cliff note version of SaaS v PaaS v IaaS:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Software-as-a-service&lt;/strong&gt; (SaaS) is where the software is already built. Think the original incarnation of Salesforce, where it was an entire customer relationship management (or CRM) system that could be integrated with. You &lt;em&gt;integrate with&lt;/em&gt; a SaaS.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Platform-as-a-service&lt;/strong&gt; (PaaS), where all of the pieces to build software are readily accessible but the integrator brings their own logic. Twilio or Sendgrid, in my mental model, are here. You &lt;em&gt;program for&lt;/em&gt; a PaaS.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Infrastructure-as-a-service&lt;/strong&gt; (IaaS) is where virtual servers and related raw-compute services are sold. AWS, Azure, etc are here. You &lt;em&gt;deploy to&lt;/em&gt; an IaaS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Where does Facebook sit? And was a misalignment between its geeky ambition and what made it money the reason they're in the trouble they're in? That in the latest newsletter, and more.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-11&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-11&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/04/11/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/04/11/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Facebook</category>
        
        <category>Zynga</category>
        
        <category>Cambridge-Analytica</category>
        
        <category>Instagram</category>
        
        <category>AWS</category>
        
        <category>Twilio</category>
        
        <category>Sendgrid</category>
        
        <category>Azure</category>
        
        <category>ESPN</category>
        
        <category>Twitter</category>
        
        <category>Talon</category>
        
        <category>Tweetbot</category>
        
        <category>Tweetings</category>
        
        <category>Twitterrific</category>
        
        <category>Oracle</category>
        
        <category>Google</category>
        
        <category>Talend</category>
        
        <category>OpenAPI</category>
        
        <category>Restlet</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Google, Oracle, and Copyrightable APIs &amp;#x2709;</title>
        <description>&lt;p&gt;What does the prospect of a $9 billion payout get you? Apparently, one long legal challenge that, despite various twists and turns, has come out in Oracle's favor. I've been dubious that an API design could be copyrighted. But I'm also not a lawyer. A federal court has ruled the Google has done damage to Oracle by copying the Java interface. It is a ridiculous claim; I would argue that Java is as popular as ever largely &lt;em&gt;because of&lt;/em&gt; Google's Android operating system. But here we are.&lt;/p&gt;

&lt;p&gt;But that isn't all. I also cover an interesting hypermedia manifesto and four common misconceptions of REST. There's also a whirlwind recap of API fallout after the Facebook fiasco.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-03&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-04-03&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/04/03/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/04/03/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Google</category>
        
        <category>Oracle</category>
        
        <category>Java</category>
        
        <category>Peter Williams</category>
        
        <category>hypermedia</category>
        
        <category>Asbjorn Ulsberg</category>
        
        <category>Facebook</category>
        
        <category>Instagram</category>
        
        <category>Cloud Elements</category>
        
        <category>microservices</category>
        
        <category>Aadhaar</category>
        
        <category>Keith Casey</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Facebook, Mulesoft Acquired, and More &amp;#x2709;</title>
        <description>&lt;p&gt;This edition of the REST API Notes is double stuffed. For starters, I've got loads to say about Facebook (I try to keep it more on the technologist side here, but &lt;a href=&quot;/2018/03/26/Facebook/&quot;&gt;I have additional, policy-related, thoughts too&lt;/a&gt;). Next up, we need to spend some time talking about Salesforce's &lt;strong&gt;$6.5 billion&lt;/strong&gt; bid for Mulesoft. Oh, and there's some top shelf microservice thought leadership from the recently concluded microXchg conference.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-03-27-facebook-salesforce-and-more&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-03-27-facebook-salesforce-and-more&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Mar 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/03/27/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/03/27/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Facebook</category>
        
        <category>Salesforce</category>
        
        <category>Mulesoft</category>
        
        <category>microXchg</category>
        
        <category>Graph API</category>
        
        <category>Kin Lane</category>
        
        <category>OAuth</category>
        
        <category>Zeynep Tufekci</category>
        
        <category>PII</category>
        
        <category>Equifax</category>
        
        <category>GDPR</category>
        
        <category>Stefan Tilkov</category>
        
        <category>Uwe Friedrichsen</category>
        
        <category>RapidAPI</category>
        
        <category>Andreessen Horowitz</category>
        
        <category>A16Z</category>
        
        <category>Mashape</category>
        
        <category>Kong</category>
        
        <category>Algorithmia</category>
        
        <category>Apigee</category>
        
        <category>Runscope</category>
        
        <category>microservices</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>Facebook, Regulation, and Who Controls the Kitchen Sink</title>
        <description>&lt;p&gt;In the wake of Cambridge-Analytica, Facebook seems to be taking the wrong lessons from the incident (or, if I’m cynical, they’re skewing in a direction that cements their market dominance). They are correct that the loss of trust is so much bigger than whatever terms of service Cambridge Analytica violated. However, the stated conclusion that there is a binary relationship between data portability and privacy - that either everything must be shared or Facebook controls everything - is &lt;em&gt;wrong&lt;/em&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2018/03/facebook-apology.jpg&quot; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Last week, concerns over Facebook’s data collection practices reached an all-time fever pitch. I had intended on sharing my thoughts, along with a handful of recommended takeaways for API providers, as part of my &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/archive&quot;&gt;REST API Notes&lt;/a&gt;. However, the longer I compiled breaking news, the longer the piece became. Eventually, it seemed warranted to break Facebook off into its own dedicated post.&lt;/p&gt;

&lt;p&gt;I’ve tried to be thorough, but “uncritical” set sail awhile ago. I’m biased. People, like techno-sociologist Zeynep Tufekci, raised the alarm years ago, when meaningful action could have been taken.  &lt;a href=&quot;/2016/08/01/CodifiedCulturalBias/&quot;&gt;I left Facebook around the same time over concerns on the power uber data aggregators wield&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Despite those protestations, Facebook’s practices continued. It doesn’t appear that the internal conversations ever switched from “can we?” to “should we?” And now the mob, embittered and frustrated by the cultural malaise of the moment, are coming with torches and regulatory pitchforks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About. Goddamn. Time.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;Mid-March, The New York Times reported that Cambridge Analytica &lt;a href=&quot;https://www.nytimes.com/2018/03/17/us/politics/cambridge-analytica-trump-campaign.html&quot;&gt;improperly acquired the private data&lt;/a&gt; of approximately 50 million Facebook users. It then, subsequently, used the psychological profiles it created with the data to target voters on behalf of the Trump campaign during the 2016 presidential election. The Obama campaign, in 2012, &lt;a href=&quot;https://www.youtube.com/watch?time_continue=1189&amp;amp;v=LGiiQUMaShw&quot;&gt;also ingested Facebook relationship data&lt;/a&gt;. However, while the Obama campaign was transparent that people were giving their information (and their friends’ information) to the cause of re-electing Obama, the Trump campaign used data culled from a personality quiz app.&lt;/p&gt;

&lt;p&gt;This app used the 1.0 version of the Facebook’s Graph API. That version launched in April, 2010 and allowed developers to “not only see the social connection between people, &lt;a href=&quot;https://techcrunch.com/2010/04/21/zuckerbergs-buildin-web-default-social/&quot;&gt;but see and create the connections people have with their interests - things, places, brands, and other sites&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;Very &lt;em&gt;little&lt;/em&gt; information is needed before profound insights can be inferred about a person. &lt;a href=&quot;https://web.archive.org/web/20090328103238/http://privacy.cs.cmu.edu/dataprivacy/HIPAA/HIPAAcomments.html&quot;&gt;A Carnegie Mellon study has shown&lt;/a&gt;, 87% of Americans can be positively identified using only a 5-digit postal code, gender, and date of birth. Full name, postal code, and date of birth equate to voter rolls, which themselves are sold by many states. Using nothing but likes, &lt;a href=&quot;http://www.pnas.org/content/early/2013/03/06/1218772110&quot;&gt;researchers Michal Kosinski, David Stillwell, and Thore Graepel have successfully shown they can predict a wide range of sensitive personal attributes&lt;/a&gt; including “sexual orientation, ethnicity, religious and political views, personality traits, intelligence, happiness, use of addictive substances, parental separation, age, and gender”.&lt;/p&gt;

&lt;p&gt;Further, version 1.0 of the Graph API didn’t just make information about a specific user available; it allowed “extended permissions”. This feature allowed approved apps to request a range of users’ &lt;em&gt;friends&lt;/em&gt;, along with their information. This additional information &lt;em&gt;did not require the consent of those friends before it was shared&lt;/em&gt;. In addition to Personally Identifiable Information (or PII), this friend information included education, groups, hometown, interests, location, relationships, religion, work history, etc. Having understanding of information flow is powerful; according to one study, &lt;a href=&quot;https://blog.acolyer.org/2018/03/26/information-flow-reveals-prediction-limits-in-online-social-activity/&quot;&gt;‘95% of the potential predictive accuracy attainable for an individual is available within the social ties of that individual only, without requiring the individual’s data’&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A University of Cambridge professor, Aleksadr Kogan, created an app called &lt;em&gt;thisisyourdigitallife&lt;/em&gt;. Built using Facebook’s Graph API, he seeded the initial userbase with people paid through Amazon’s “Mechanical Turk”. Subsequently, &lt;a href=&quot;https://www.nytimes.com/2018/03/19/opinion/facebook-cambridge-analytica.html&quot;&gt;around 270,000 people were paid between $1 and $2 to download and use the personality quiz app&lt;/a&gt;. Through the use of ‘extended permissions’ the initial 270,000 users resulted in 50 million populated profiles; profiles containing the names, dates of birth, employment history, likes, and more. Aleksadr then gave the information he collected to Cambridge Analytica. &lt;em&gt;Technically&lt;/em&gt;, only the last step violated Facebook’s rules, which prohibit selling or giving away data collected by a third-party app.&lt;/p&gt;

&lt;p&gt;Graph 1.0 was deprecated on April 2014 (and access ended entirely in 2015). The second version of the Graph API, while providing information for the conscenting user, &lt;a href=&quot;https://stackoverflow.com/questions/23417356/facebook-graph-api-v2-0-me-friends-returns-empty-or-only-friends-who-also-u&quot;&gt;no longer has extended permissions&lt;/a&gt;. However, the data collected by external entities during this time cannot be expunged; revoking access does nothing to the apps that might have had access and saved themselves a copy. The data is out there, on who-knows-how-many private servers, with the potential to be purchased, aggregated with other datasets, and weaponized for future scenarios.&lt;/p&gt;

&lt;p&gt;In fact, &lt;a href=&quot;https://www.theatlantic.com/technology/archive/2018/03/my-cow-game-extracted-your-facebook-data/556214/&quot;&gt;as the author of the Facebook game ‘Cow Clicker’ stated&lt;/a&gt;, “all the publicity around Facebook’s Cambridge Analytica crisis might be sending lots of old app developers, like me, back to old code and dusty databases, wondering what they’ve even got stored and what it might yet be worth”.&lt;/p&gt;

&lt;p&gt;Furthermore, the abuses didn’t stop when Graph 1.0 was fully shutdown in 2015. Other Facebook products, like Instagram’s API, &lt;a href=&quot;https://business.instagram.com/blog/new-instagram-api-features&quot;&gt;still exhibit similar behavior&lt;/a&gt;. In March, 2016, &lt;a href=&quot;https://promarket.org/roger-mcnamee-think-can-make-legitimate-case-facebook-become-parasitic/&quot;&gt;Facebook expelled a group that was using its API to scrape data about people who expressed interest in Black Lives Matter&lt;/a&gt;. The group had been selling the data to police departments. At the end of the same year, &lt;a href=&quot;https://www.propublica.org/article/hud-has-serious-concerns-about-facebooks-ethnic-targeting&quot;&gt;the Department of Housing and Urban Development launched an investigation following concerns that Facebook’s advertising tools allow real estate advertisers to discriminate users according to race&lt;/a&gt;. Facebook &lt;a href=&quot;http://time.com/5215274/facebook-messenger-android-call-text-message-data/&quot;&gt;has also admitted to collecting call and text message history of users who own Android phones&lt;/a&gt; (while users were asked if they wanted to import their phone contacts, it was not obvious to many users that they were agreeing to have their cell phone activity recorded).&lt;/p&gt;

&lt;p&gt;Mark Zuckerberg &lt;a href=&quot;https://www.techdirt.com/articles/20180321/17312239474/mark-zuckerberg-finally-speaks-about-cambridge-analytica-it-wont-be-enough.shtml&quot;&gt;responded last Wednesday afternoon, outlining reactive steps to the situation&lt;/a&gt;: Facebook would &lt;em&gt;investigate old apps that used v1.0&lt;/em&gt;, &lt;em&gt;further restrict access to data&lt;/em&gt;, and &lt;em&gt;give more transparency and control to end users&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Meanwhile, Facebook and Cambridge Analytica have &lt;a href=&quot;https://www.techdirt.com/articles/20180318/00111439443/both-facebook-cambridge-analytica-threatened-to-sue-journalists-over-stories-cas-use-facebook-data.shtml&quot;&gt;threatened to sue&lt;/a&gt; the journalists that broke the original story. This seems, primarily, over the erroneous use of the word “breach” in the course of describing events; if determined to be a data breach (which this wasn’t), the company could face fines.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;Frustratingly, Facebook seems to be taking the wrong lessons from the incident (or, if I’m cynical, they’re skewing in a direction that cements their market dominance). They are correct that the loss of trust is so much bigger than whatever terms of service Cambridge Analytica violated. However, the stated conclusion that there is a binary relationship between data portability and privacy - that either everything must be shared or Facebook controls everything - is &lt;em&gt;wrong&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.techdirt.com/articles/20180321/17312239474/mark-zuckerberg-finally-speaks-about-cambridge-analytica-it-wont-be-enough.shtml&quot;&gt;Techdirt summarized the round of media interviews that Mark Zuckerberg did, where he said&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I was maybe too idealistic on the side of data portability, that it would create more good experiences — and it created some — but I think what the clear feedback from our community was that people value privacy a lot more.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Later, he bemoans having to make these kinds of tradeoffs:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I guess I have to, because of [where we are] now, but I’d rather not.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If consumers &lt;em&gt;had&lt;/em&gt; control, it would take Mark out of the leadership role that he is, apparently, uncomfortable playing.  Why &lt;em&gt;can’t&lt;/em&gt; someone easily be able to bulk-delete “likes” older than a year? Why is it necessary for Facebook to retain work history older than the last employer? Sexual orientation, race, and religious affiliation can get someone killed - so why can’t people indicate that these should never be stored, or even &lt;em&gt;inferred&lt;/em&gt; - as part of their profile?&lt;/p&gt;

&lt;p&gt;The most valuable part of Facebook, for an individual, is not the status updates, or the images uploaded - it is the network of connections they’ve built. This is why so many apps, unable to get the social graph from Facebook, resort to the kludge of the “access your contacts” email workaround. If the individual chose, why couldn’t they take those relationships (sans ‘extended permissions’ data) with them somewhere else?&lt;/p&gt;

&lt;p&gt;Rather than allow apps to hoover up the kind of information useful for psyops, why not allow developers to create 3rd party tools for permissions configuration, &lt;a href=&quot;https://www.eff.org/deeplinks/2018/03/why-we-didnt-make-fix-my-facebook-privacy-settings-tool&quot;&gt;the kind Cory Doctorow wrote about&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Unfortunately, because there is little market incentive for Facebook to do so. Till now, the profitable thing has not aligned with the right thing. As Doc Searls has written, &lt;a href=&quot;http://blogs.harvard.edu/doc/2018/03/23/nothing/&quot;&gt;this is a problem not just for Facebook, but for an entire online publishing industry dependent on building advertising panopticons for revenue growth&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Regulation, above and beyond what currently exists, is coming. It &lt;em&gt;could&lt;/em&gt; make a difference. However, ideas currently swirling entrench Facebook as the market leader, with little likelihood of alternatives arising. An example is the European ‘&lt;a href=&quot;https://pagefair.com/blog/2017/gdpr_risk_to_the_duopoly/&quot;&gt;General Data Protection Regulation&lt;/a&gt;’ (GDPR). It goes into effect May, 2018. Some have hailed it as progress toward defining when user consent is necessary. It also has provisions for data portability. However, &lt;a href=&quot;https://medium.com/mydata/gdpr-data-portability-is-a-false-promise-af460d35a629&quot;&gt;there are already workarounds devised, with the social graph considered a “legitimate interest” of the social network&lt;/a&gt;. As a ‘legitimate interest’ of the business, it is not privy to export.&lt;/p&gt;

&lt;p&gt;As Techdirt summarized:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“Solving” the problem isn’t going to be solving the problem for real – and it’s just going to end up giving Facebook greater power over our data. That’s an unfortunate result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What we need is thoughtful, not knee-jerk, regulation. We need consumer-friendly policies that promote the principles of the open web and eschew monopolies. We need to treat personal data with the kind of care and responsibility that we do with powerful, and potentially dangerous, things in the real world. And we need to look for answers outside of Facebook, because there’s few incentives to drive the necessary change from within.&lt;/p&gt;

&lt;div style=&quot;max-width:854px&quot;&gt;&lt;div style=&quot;position:relative;height:0;padding-bottom:56.25%&quot;&gt;&lt;iframe src=&quot;https://embed.ted.com/talks/zeynep_tufekci_we_re_building_a_dystopia_just_to_make_people_click_on_ads&quot; width=&quot;854&quot; height=&quot;480&quot; style=&quot;position:absolute;left:0;top:0;width:100%;height:100%&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 26 Mar 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2018/03/26/Facebook/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/03/26/Facebook/</guid>
        
        <category>Facebook</category>
        
        <category>Zeynep Tufekci</category>
        
        <category>regulation</category>
        
        <category>governance</category>
        
        <category>Trump</category>
        
        <category>Obama</category>
        
        <category>Graph API</category>
        
        <category>Carnegie Mellon</category>
        
        <category>Michal Kosinski</category>
        
        <category>David Stillwell</category>
        
        <category>Thore Graepel</category>
        
        <category>Aleksadr Kogan</category>
        
        <category>Cambridge Analytica</category>
        
        <category>Mechanical Turk</category>
        
        <category>Instagram</category>
        
        <category>Mark Zuckerberg</category>
        
        <category>open web</category>
        
        <category>Cory Doctorow</category>
        
        <category>Doc Searls</category>
        
        <category>GDPR</category>
        
        
      </item>
    
      <item>
        <title>Design-First APIs and API Academy Presos &amp;#x2709;</title>
        <description>&lt;p&gt;Document, or design-first, approaches to API design are increasing in adoption. Or at least that's what I'm lead to believe with this latest batch of pieces in the REST API notes. Keith Casey shares a numbe of different documentation styles. There's also a number of related pieces which further flesh out the role API descriptions play in a modern production workflow.&lt;/p&gt;

&lt;p&gt;I also share a number of recent presentations from the API Academy. This early spring, the team was out in force, educating about APIs in a variety of forums around the world. *Per usual*, they've shared their work, and we're the better for it.&lt;/p&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-03-13&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-03-13&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Mar 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/newsletter/2018/03/13/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/03/13/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Keith Casey</category>
        
        <category>Design-First</category>
        
        <category>Phil Sturgeon</category>
        
        <category>Shekhar Banerjee</category>
        
        <category>eBay</category>
        
        <category>Faria Rehman</category>
        
        <category>APIMatic</category>
        
        <category>OpenAPI</category>
        
        <category>Erik Wilde</category>
        
        <category>Mike Amundsen</category>
        
        <category>Matt McLarty</category>
        
        <category>Irakli Nadareishvili</category>
        
        <category>IANA</category>
        
        <category>Speccy</category>
        
        <category>Hootsuite</category>
        
        <category>microservices</category>
        
        
        <category>newsletter</category>
        
      </item>
    
      <item>
        <title>The Role of Product Management in API Design</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“The handles of a craftman’s tools bespeak an absolute simplicity, the plainest forms affording the greatest range of possibilitites for the user’s hand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;“That which is overdesigned, too highly specific, anticipates outcome; the anticipation of the outcomes guarantees, if not failure, the absence of grace.” - William Gibson, &lt;em&gt;All Tomorrow’s Parties&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;figure&gt;&lt;img src=&quot;/images/2018/03/management-books.png&quot; alt=&quot;a picture of product management books on a bookstore shelf, taken from Morguefile.com&quot; /&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Successful APIs, whether they are external products or internal glue, require strong product management. However, given an API’s ephemeral nature, product managers may have difficulty with how to proceed. This poor API product management results in a product that doesn’t meet the needs of users. Adoption will be limited. Integrations, when they do happen, will be difficult. And correcting mistakes after development will remain a demoralizing and expensive proposition.&lt;/p&gt;

&lt;p&gt;Martin Eriksson, &lt;a href=&quot;https://www.mindtheproduct.com/2011/10/what-exactly-is-a-product-manager/&quot;&gt;defines the Product Manager role as an expertise that lies at the intersection of tech, business, and UX&lt;/a&gt;. Martin then quotes the book, &lt;a href=&quot;https://www.amazon.com/INSPIRED-Create-Tech-Products-Customers/dp/1119387507/&quot;&gt;Inspired&lt;/a&gt;, that states a product manager should ‘discover a product that is valuable, usable and feasible’. What constitutes “valuable”, “usable”, and “feasible” for an API?&lt;/p&gt;

&lt;h2 id=&quot;valuable&quot;&gt;Valuable&lt;/h2&gt;
&lt;p&gt;At the most fundamental level, an API must provide a useful function. Determining what is useful and what is not is the first job for an API product manager.&lt;/p&gt;

&lt;h3 id=&quot;building-for-the-correct-audience&quot;&gt;Building for the Correct Audience&lt;/h3&gt;
&lt;p&gt;Product managers should understand the audience that will consume the API. That may be easier than it sounds, as there actually several different types of people evaluating an API, each with their own questions. As &lt;a href=&quot;https://bradfults.com/the-best-api-documentation-b9e46400379a&quot;&gt;Brad Fults mentions&lt;/a&gt;, these audiences may include, but are not limited to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Decision Makers&lt;/strong&gt; evaluating competing API products&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Developers&lt;/strong&gt; looking to get started&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Integrators&lt;/strong&gt; attempting to debug a specific issue in an existing client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each audience has different needs. For the decision maker, is the functionality provided by an API the same, if not better, than other competitive offerings? Can a developer get started with an API easily, perhaps with nothing more than a CURL statement? Does the API return the type of error messages that, when things go wrong, make it easy for an integrator to fix?&lt;/p&gt;

&lt;h3 id=&quot;api-design-that-is-outside-in-not-reflections-of-internal-implementations&quot;&gt;API Design that is ‘Outside In’, not Reflections of Internal Implementations&lt;/h3&gt;

&lt;p&gt;An API design should align with the integrator’s understanding. Creating an interface constrained to the internal systems implementation is rarely a good idea. These systems, particularly those that have existed in legacy environments, are a complex aggregation of shifting business priorities, technical advancement, team experience, etc. Exposing years (if not decades) of ‘dirty laundry’ at once significantly increases the barriers to comprehension and adoption.&lt;/p&gt;

&lt;h3 id=&quot;clear-ownership&quot;&gt;Clear Ownership&lt;/h3&gt;
&lt;p&gt;Product management includes a degree of ownership. The part of ownership that integrators care about is the amount, and form, that ownership is exhibited in. Trust in an API is difficult to earn and can be easily fumbled away.&lt;/p&gt;

&lt;p&gt;Ownership of an API translates to the following communication:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Uptime Dashboard/SLA&lt;/li&gt;
  &lt;li&gt;Change Log/Release Notes&lt;/li&gt;
  &lt;li&gt;Roadmaps&lt;/li&gt;
  &lt;li&gt;Known and Communicated Support and Feedback Channels&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The individual forms may vary. But each of these is an attempt to convey stability and permanence - two crucial elements when wooing developers with other options. A product with a future and team behind it is orders of magnitude more desirable than unmaintained code deployed on a computer under someone’s desk. A product manager should ensure that the former is being communicated, not the latter.&lt;/p&gt;

&lt;h2 id=&quot;usable&quot;&gt;Usable&lt;/h2&gt;
&lt;p&gt;There are a variety of different approaches for web-based APIs. Whether using RPC, REST, or subsequent variations, an API design produced by one team may vary significantly in usage and &lt;a href=&quot;http://amundsen.com/blog/archives/1109&quot;&gt;affordances&lt;/a&gt; from another team’s product - even when both teams work for the same company! The number of design choices, and how they subsequently manifest in the design, require additional work to ensure the designs are usable.&lt;/p&gt;

&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;
&lt;p&gt;This collection of differences means that documentation is incredibly important. In fact, in John Musser’s talk, “&lt;a href=&quot;https://www.slideshare.net/jmusser/ten-reasons-developershateyourapi/&quot;&gt;Ten Reasons Developers Hate Your API&lt;/a&gt;”, “sucky” documentation was listed as the &lt;strong&gt;#1&lt;/strong&gt; API problem.&lt;/p&gt;

&lt;p&gt;Reasons that documentation may suck include, but are not limited to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Being inaccurate/out-of-date/incomplete&lt;/li&gt;
  &lt;li&gt;Lacking a getting started onramp&lt;/li&gt;
  &lt;li&gt;Unprofessional and/or lacking clarity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rise of various formats that capture API intent in structured ways, like the OpenAPI specification, are a start. These &lt;em&gt;integration contracts&lt;/em&gt; can be used to &lt;em&gt;render&lt;/em&gt; documentation in a manner similar to how annotations in a Java codebase can render Javadoc.&lt;/p&gt;

&lt;p&gt;However, like Javadocs, this “documentation” is often the bare minimum that can be done towards effective communication and understanding. An API product manager should be closely involved in the creation of an API’s documentation. They should ensure that the business value of their product is clearly captured to the intended audience.&lt;/p&gt;

&lt;h3 id=&quot;standards&quot;&gt;Standards&lt;/h3&gt;
&lt;p&gt;A common design consideration is “&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Principle_of_least_astonishment&quot;&gt;the principle of least surprise&lt;/a&gt;&lt;/em&gt;”. Design works best when it reuses familiar interface concepts. With a user interface (UI), this allows end users to make successful educated guesses, resulting in better user experience (UX). This developer experience, or “DX” should be part of the consideration when creating an API design.&lt;/p&gt;

&lt;p&gt;Common industry patterns for should be used. Where possible, data should adhere standards, and those standards explicitly referenced in the documentation. For example, why force a consumer to create their own parsing for your bespoke date and time format? Use ISO8601 instead, reference it in the documentation, and be done with it. Extra points if the API design takes advantage of the work on &lt;a href=&quot;http://schema.org/&quot;&gt;schema.org&lt;/a&gt; and properly uses &lt;a href=&quot;https://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;media types&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;feasible&quot;&gt;Feasible&lt;/h2&gt;
&lt;p&gt;Different integrations will have different consumptions needs. Some may be able to consume the entire payload as designed. Others, do to computational or bandwidth constraints, may want a refined perspective on the resource available. Working with potential consumers to build in rate controls from the beginning is important.&lt;/p&gt;

&lt;h3 id=&quot;malleability&quot;&gt;Malleability&lt;/h3&gt;
&lt;p&gt;Support for sort ordering and pagination on returned collections is important. Default return amounts, rather than to defaulting to the entire collection, should be explicitly stated in the documentation and modifiable (within reason - page size limits should also be explicitly called out). Filtering, depending on the collection size, may be important. A more advanced option, depending on the need, is to allow for selective parameter retrieval.&lt;/p&gt;

&lt;h3 id=&quot;cacheability&quot;&gt;Cacheability&lt;/h3&gt;
&lt;p&gt;APIs should take advantage of the idempotent and safe natures available on the appropriate endpoints. Services enhance cache-ability by setting headers on responses. These headers, at a minimum, include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Date&lt;/li&gt;
  &lt;li&gt;Cache-Control&lt;/li&gt;
  &lt;li&gt;Expires&lt;/li&gt;
  &lt;li&gt;Pragma&lt;/li&gt;
  &lt;li&gt;Last-Modified&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is also possible to use the ETag header for validating the freshness of cached representations, as well as helping with conditional read and update operations. Its value is an arbitrary string for the version of a representation, sometimes a simple hash of the underlying object.&lt;/p&gt;

&lt;p&gt;A product manager may not understand the &lt;em&gt;exactly&lt;/em&gt; technical mechanisms behind how these headers work. However, they should desire the best customer experience possible, and - for many - that means zippy responses.&lt;/p&gt;

&lt;p&gt;Phil Sturgeon has a couple of fantastic pieces on HTTP caching. The first is &lt;a href=&quot;https://blog.apisyouwonthate.com/speeding-up-apis-apps-smart-toasters-with-http-response-caching-a67becf829c6&quot;&gt;a blog post on how to speed up API performance with HTTP response caching&lt;/a&gt;. The second is &lt;a href=&quot;https://www.youtube.com/watch?v=OwoVFGnpqpM&quot;&gt;a presentation he recently gave that was posted to YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;If that sounds like a lot to manage, it’s because it is. Being a product manager for an API comes with all the research and testing of a normal product, but with an additional dash of technical acumen and developer savvy. But the reward - easier integrations, more developer happiness, and better expressions of business value - is worth it.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Mar 2018 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2018/03/12/ProductManagementInAPIDesign/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/03/12/ProductManagementInAPIDesign/</guid>
        
        <category>API Design</category>
        
        <category>product management</category>
        
        <category>REST API</category>
        
        <category>API Governance</category>
        
        <category>caching</category>
        
        <category>Martin Eriksson</category>
        
        <category>John Musser</category>
        
        <category>Phil Sturgeon</category>
        
        
      </item>
    
      <item>
        <title>HTTP Caching and Machine-Readable APIs &amp;#x2709;</title>
        <description>&lt;p&gt;In this edition there's some insight into Netflix's architecture and Phil Sturgeon has a banger about HTTP caching. I spend most of the time, however, pivoting a Kin Lane argument about machine-readible (more like machine-*parsable*) API descriptions into an examination of &quot;open&quot; API developer programs. &lt;/p&gt;

&lt;blockquote&gt;&quot;Companies' who create public API programs because they can, whose additional bandwidth and compute costs accrue faster than the revenue/mindshare they gain, who aren't content to be plumbing for someone else's storefront... they are not long for this world.&quot;&lt;/blockquote&gt;

&lt;p&gt;You can find the web version of the newsletter email here: &lt;a href=&quot;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-03-06&quot;&gt;https://tinyletter.com/RESTAPINotes/letters/rest-api-notes-for-2018-03-06&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Past editions of the newsletter can be found here: &lt;a href=&quot;http://tinyletter.com/RESTAPINotes/archive﻿&quot;&gt;http://tinyletter.com/RESTAPINotes/archive﻿&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A comprehensive list of upcoming web events that I maintain can be found at &lt;a href=&quot;http://webapi.events&quot;&gt;webapi.events&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Mar 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/newsletter/2018/03/06/RESTAPINotes/</link>
        <guid isPermaLink="true">http://localhost:4000/newsletter/2018/03/06/RESTAPINotes/</guid>
        
        <category>REST API Notes</category>
        
        <category>Netflix</category>
        
        <category>Suudhan Rangarajan</category>
        
        <category>Mike Amundsen</category>
        
        <category>Roy Fielding</category>
        
        <category>Phil Sturgeon</category>
        
        <category>Kin Lane</category>
        
        <category>Edmunds</category>
        
        <category>ESPN</category>
        
        <category>Ashley Hathaway</category>
        
        <category>Hyrum's Law</category>
        
        
        <category>newsletter</category>
        
      </item>
    
  </channel>
</rss>
